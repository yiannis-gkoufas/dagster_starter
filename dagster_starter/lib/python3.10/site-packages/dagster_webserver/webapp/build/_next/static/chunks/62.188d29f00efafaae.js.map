{"version":3,"file":"static/chunks/62.188d29f00efafaae.js","mappings":"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","sources":["webpack://_N_E/../ui-components/src/components/Page.tsx","webpack://_N_E/../ui-components/src/components/PageHeader.tsx","webpack://_N_E/../ui-core/src/assets/globalAssetGraphPathToString.tsx","webpack://_N_E/../ui-core/src/hooks/useSelectionReducer.ts","webpack://_N_E/../ui-core/src/runs/AssetTagCollections.tsx","webpack://_N_E/../ui-core/src/runs/CreatedByTag.tsx","webpack://_N_E/../ui-core/src/runs/DeletionDialog.tsx","webpack://_N_E/../ui-components/src/components/ProductTour.tsx","webpack://_N_E/../ui-core/src/runs/ReexecutionDialog.tsx","webpack://_N_E/../ui-core/src/runs/RunActionsMenu.tsx","webpack://_N_E/../ui-core/src/runs/ShowAndHideRunTags.mp4","webpack://_N_E/../ui-core/src/runs/RunTable.tsx","webpack://_N_E/../ui-core/src/runs/RunTags.tsx","webpack://_N_E/../ui-core/src/ui/AnchorButton.tsx","webpack://_N_E/../ui-core/src/ui/MenuLink.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Page = styled.div`\n  height: 100%;\n  overflow-y: auto;\n  padding-bottom: 64px;\n  width: 100%;\n`;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName} from './Icon';\n\ninterface Props {\n  title: React.ReactNode;\n  tags?: React.ReactNode;\n  icon?: IconName;\n  description?: React.ReactNode;\n  metadata?: React.ReactNode;\n  right?: React.ReactNode;\n  tabs?: React.ReactNode;\n}\n\nexport const PageHeader = (props: Props) => {\n  const {title, tags, right, tabs} = props;\n  return (\n    <PageHeaderContainer\n      background={Colors.Gray50}\n      padding={{top: 16, left: 24, right: 12}}\n      border=\"bottom\"\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}} padding={{bottom: 16}}>\n        <Box flex={{direction: 'row', alignItems: 'flex-start', gap: 12, wrap: 'wrap'}}>\n          {title}\n          {tags}\n        </Box>\n        {right}\n      </Box>\n      {tabs}\n    </PageHeaderContainer>\n  );\n};\n\nconst PageHeaderContainer = styled(Box)`\n  width: 100%;\n\n  /**\n   * Blueprint breadcrumbs annoyingly have a built-in height.\n   */\n  .bp4-breadcrumbs {\n    height: auto;\n  }\n`;\n","import {tokenForAssetKey} from '../asset-graph/Utils';\nimport {AssetKeyInput} from '../graphql/types';\nimport {\n  ExplorerPath,\n  explorerPathFromString,\n  explorerPathToString,\n} from '../pipelines/PipelinePathUtils';\n\n// https://stackoverflow.com/questions/417142/what-is-the-maximum-length-of-a-url-in-different-browsers\nconst URL_MAX_LENGTH = 32000;\nconst __GLOBAL__ = '__GLOBAL__';\n\nexport function globalAssetGraphPathToString(path: Omit<ExplorerPath, 'pipelineName'>) {\n  const str = explorerPathToString({...path, pipelineName: __GLOBAL__}).replace(__GLOBAL__, '');\n  return `/asset-groups${str}`;\n}\n\nexport function globalAssetGraphPathFromString(pathName: string) {\n  return explorerPathFromString(__GLOBAL__ + pathName || '/');\n}\n\nexport function globalAssetGraphPathForAssetsAndDescendants(assetKeys: AssetKeyInput[]) {\n  // In a perfect world we populate ops query to \"asset1*,asset2*\" and then select the roots\n  // by passing opNames. If we don't have enough characters to do both, just populate the ops\n  // query. It might still be too long, but we tried.\n  const opsQuery = assetKeys.map((a) => `${tokenForAssetKey(a)}*`).join(', ');\n  const opNames =\n    opsQuery.length > URL_MAX_LENGTH / 2 ? [] : [assetKeys.map(tokenForAssetKey).join(',')];\n  return globalAssetGraphPathToString({opNames, opsQuery});\n}\n","import React from 'react';\n\ntype State = {\n  checkedIds: Set<string>;\n  lastCheckedId: string | null;\n};\n\ntype Action =\n  | {type: 'toggle-one'; payload: {checked: boolean; id: string}}\n  | {\n      type: 'toggle-slice';\n      payload: {checked: boolean; id: string; allIds: string[]};\n    }\n  | {type: 'toggle-all'; payload: {checked: boolean; allIds: string[]}};\n\nconst reducer = (state: State, action: Action): State => {\n  const copy = new Set(Array.from(state.checkedIds));\n  switch (action.type) {\n    case 'toggle-one': {\n      const {checked, id} = action.payload;\n      checked ? copy.add(id) : copy.delete(id);\n      return {lastCheckedId: id, checkedIds: copy};\n    }\n\n    case 'toggle-slice': {\n      const {checked, id, allIds} = action.payload;\n      const {lastCheckedId} = state;\n\n      const indexOfLast = lastCheckedId ? allIds.indexOf(lastCheckedId) : -1;\n      const indexOfChecked = allIds.indexOf(id);\n      if (indexOfLast === -1 || indexOfChecked === -1) {\n        return state;\n      }\n\n      const [start, end] = [indexOfLast, indexOfChecked].sort();\n      allIds.slice(start, end! + 1).forEach((id) => {\n        checked ? copy.add(id) : copy.delete(id);\n      });\n\n      return {\n        lastCheckedId: id,\n        checkedIds: copy,\n      };\n    }\n\n    case 'toggle-all': {\n      const {checked, allIds} = action.payload;\n      return {\n        lastCheckedId: null,\n        checkedIds: checked ? new Set(allIds) : new Set(),\n      };\n    }\n  }\n};\n\nconst initialState: State = {\n  checkedIds: new Set(),\n  lastCheckedId: null,\n};\n\nexport function useSelectionReducer(allIds: string[]) {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const onToggleFactory = (id: string) => (values: {checked: boolean; shiftKey: boolean}) => {\n    const {checked, shiftKey} = values;\n    if (shiftKey && state.lastCheckedId) {\n      dispatch({type: 'toggle-slice', payload: {checked, id, allIds}});\n    } else {\n      dispatch({type: 'toggle-one', payload: {checked, id}});\n    }\n  };\n\n  const onToggleAll = (checked: boolean) => {\n    dispatch({type: 'toggle-all', payload: {checked, allIds}});\n  };\n\n  return [state, {onToggleFactory, onToggleAll}] as const;\n}\n","import {\n  Box,\n  Button,\n  ButtonLink,\n  Colors,\n  Dialog,\n  DialogFooter,\n  Icon,\n  MiddleTruncate,\n  Tag,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {displayNameForAssetKey} from '../asset-graph/Utils';\nimport {\n  assetDetailsPathForAssetCheck,\n  assetDetailsPathForKey,\n} from '../assets/assetDetailsPathForKey';\nimport {globalAssetGraphPathForAssetsAndDescendants} from '../assets/globalAssetGraphPathToString';\nimport {AssetKey} from '../assets/types';\nimport {TagActionsPopover} from '../ui/TagActions';\nimport {VirtualizedItemListForDialog} from '../ui/VirtualizedItemListForDialog';\n\nconst renderItemAssetKey = (assetKey: AssetKey) => (\n  <Link to={assetDetailsPathForKey(assetKey)} style={{display: 'block', width: '100%'}}>\n    <MiddleTruncate text={displayNameForAssetKey(assetKey)} />\n  </Link>\n);\n\nconst renderItemAssetCheck = (assetCheck: Check) => (\n  <Link to={assetDetailsPathForAssetCheck(assetCheck)} style={{display: 'block', width: '100%'}}>\n    <MiddleTruncate text={labelForAssetCheck(assetCheck)} />\n  </Link>\n);\n\nconst labelForAssetCheck = (check: Check) => {\n  return `${check.name} on ${displayNameForAssetKey(check.assetKey)}`;\n};\n\nfunction useShowMoreDialog<T>(\n  dialogTitle: string,\n  items: T[] | null,\n  renderItem: (item: T) => React.ReactNode,\n) {\n  const [showMore, setShowMore] = React.useState(false);\n\n  const dialog =\n    !!items && items.length > 1 ? (\n      <Dialog\n        title={dialogTitle}\n        onClose={() => setShowMore(false)}\n        style={{minWidth: '400px', width: '50vw', maxWidth: '800px', maxHeight: '70vh'}}\n        isOpen={showMore}\n      >\n        <div style={{height: '500px', overflow: 'hidden'}}>\n          <VirtualizedItemListForDialog items={items} renderItem={renderItem} />\n        </div>\n        <DialogFooter topBorder>\n          <Button intent=\"primary\" autoFocus onClick={() => setShowMore(false)}>\n            Done\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    ) : undefined;\n\n  return {dialog, showMore, setShowMore};\n}\n\nexport const AssetKeyTagCollection: React.FC<{\n  assetKeys: AssetKey[] | null;\n  dialogTitle?: string;\n  useTags?: boolean;\n}> = React.memo(({assetKeys, useTags, dialogTitle = 'Assets in run'}) => {\n  const {setShowMore, dialog} = useShowMoreDialog(dialogTitle, assetKeys, renderItemAssetKey);\n\n  if (!assetKeys || !assetKeys.length) {\n    return null;\n  }\n\n  if (assetKeys.length === 1) {\n    // Outer span ensures the popover target is in the right place if the\n    // parent is a flexbox.\n    const assetKey = assetKeys[0]!;\n    return (\n      <span style={useTags ? {} : {marginBottom: -4}}>\n        <TagActionsPopover\n          data={{key: '', value: ''}}\n          actions={[\n            {\n              label: 'View asset',\n              to: assetDetailsPathForKey(assetKey),\n            },\n            {\n              label: 'View downstream lineage',\n              to: assetDetailsPathForKey(assetKey, {\n                view: 'lineage',\n                lineageScope: 'downstream',\n              }),\n            },\n          ]}\n        >\n          {useTags ? (\n            <Tag intent=\"none\" interactive icon=\"asset\">\n              {displayNameForAssetKey(assetKey)}\n            </Tag>\n          ) : (\n            <Link to={assetDetailsPathForKey(assetKey)}>\n              <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n                <Icon color={Colors.Gray400} name=\"asset\" size={16} />\n                {displayNameForAssetKey(assetKey)}\n              </Box>\n            </Link>\n          )}\n        </TagActionsPopover>\n      </span>\n    );\n  }\n\n  return (\n    <span style={useTags ? {} : {marginBottom: -4}}>\n      <TagActionsPopover\n        data={{key: '', value: ''}}\n        actions={[\n          {\n            label: 'View list',\n            onClick: () => setShowMore(true),\n          },\n          {\n            label: 'View downstream lineage',\n            to: globalAssetGraphPathForAssetsAndDescendants(assetKeys),\n          },\n        ]}\n      >\n        {useTags ? (\n          <Tag intent=\"none\" icon=\"asset\">\n            {assetKeys.length} assets\n          </Tag>\n        ) : (\n          <ButtonLink onClick={() => setShowMore(true)}>\n            <Box flex={{direction: 'row', gap: 8, alignItems: 'center', display: 'inline-flex'}}>\n              <Icon color={Colors.Gray400} name=\"asset\" size={16} />\n              <Box style={{flex: 1}} flex={{wrap: 'wrap', display: 'inline-flex'}}>\n                {`${assetKeys.length} assets`}\n              </Box>\n            </Box>\n          </ButtonLink>\n        )}\n      </TagActionsPopover>\n      {dialog}\n    </span>\n  );\n});\n\ntype Check = {name: string; assetKey: AssetKey};\n\nexport const AssetCheckTagCollection: React.FC<{\n  assetChecks: Check[] | null;\n  dialogTitle?: string;\n  useTags?: boolean;\n}> = React.memo(({assetChecks, useTags, dialogTitle = 'Asset checks in run'}) => {\n  const {setShowMore, dialog} = useShowMoreDialog(dialogTitle, assetChecks, renderItemAssetCheck);\n\n  if (!assetChecks || !assetChecks.length) {\n    return null;\n  }\n\n  if (assetChecks.length === 1) {\n    // Outer span ensures the popover target is in the right place if the\n    // parent is a flexbox.\n    const check = assetChecks[0]!;\n    return (\n      <span style={useTags ? {} : {marginBottom: -4}}>\n        <TagActionsPopover\n          data={{key: '', value: ''}}\n          actions={[{label: 'View asset check', to: assetDetailsPathForAssetCheck(check)}]}\n        >\n          {useTags ? (\n            <Tag intent=\"none\" interactive icon=\"asset_check\">\n              {labelForAssetCheck(check)}\n            </Tag>\n          ) : (\n            <Link to={assetDetailsPathForAssetCheck(check)}>\n              <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n                <Icon color={Colors.Gray400} name=\"asset_check\" size={16} />\n                {labelForAssetCheck(check)}\n              </Box>\n            </Link>\n          )}\n        </TagActionsPopover>\n      </span>\n    );\n  }\n\n  return (\n    <span style={useTags ? {} : {marginBottom: -4}}>\n      <TagActionsPopover\n        data={{key: '', value: ''}}\n        actions={[\n          {\n            label: 'View list',\n            onClick: () => setShowMore(true),\n          },\n        ]}\n      >\n        {useTags ? (\n          <Tag intent=\"none\" icon=\"asset_check\">\n            {assetChecks.length} asset checks\n          </Tag>\n        ) : (\n          <ButtonLink onClick={() => setShowMore(true)}>\n            <Box flex={{direction: 'row', gap: 8, alignItems: 'center', display: 'inline-flex'}}>\n              <Icon color={Colors.Gray400} name=\"asset_check\" size={16} />\n              <Box style={{flex: 1}} flex={{wrap: 'wrap', display: 'inline-flex'}}>\n                {`${assetChecks.length} asset checks`}\n              </Box>\n            </Box>\n          </ButtonLink>\n        )}\n      </TagActionsPopover>\n      {dialog}\n    </span>\n  );\n});\n","import {Box, Tag} from '@dagster-io/ui-components';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {useLaunchPadHooks} from '../launchpad/LaunchpadHooksContext';\nimport {TagActionsPopover} from '../ui/TagActions';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nimport {DagsterTag} from './RunTag';\nimport {RunFilterToken} from './RunsFilterInput';\nimport {RunTagsFragment} from './types/RunTable.types';\n\ntype Props = {\n  repoAddress?: RepoAddress | null;\n  tags: RunTagsFragment[];\n  onAddTag?: (token: RunFilterToken) => void;\n};\n\nexport const CreatedByTagCell = React.memo(({repoAddress, tags, onAddTag}: Props) => {\n  return (\n    <Box flex={{direction: 'column', alignItems: 'flex-start'}}>\n      <CreatedByTag repoAddress={repoAddress} tags={tags} onAddTag={onAddTag} />\n    </Box>\n  );\n});\n\ntype TagType =\n  | {\n      type: 'user' | 'schedule' | 'sensor' | 'auto-materialize' | 'auto-observe';\n      tag: RunTagsFragment;\n    }\n  | {type: 'manual'};\n\nconst pluckTagFromList = (tags: RunTagsFragment[]): TagType => {\n  for (const tag of tags) {\n    const {key} = tag;\n    switch (key) {\n      case DagsterTag.User:\n        return {type: 'user', tag};\n      case DagsterTag.ScheduleName:\n        return {type: 'schedule', tag};\n      case DagsterTag.SensorName:\n        return {type: 'sensor', tag};\n      case DagsterTag.Automaterialize:\n        return {type: 'auto-materialize', tag};\n      case DagsterTag.CreatedBy: {\n        // Backwards compatibility\n        if (tag.value === 'auto_materialize') {\n          return {type: 'auto-materialize', tag};\n        } else {\n          continue;\n        }\n      }\n      case DagsterTag.AutoObserve:\n        return {type: 'auto-observe', tag};\n    }\n  }\n\n  return {type: 'manual'};\n};\n\nexport const CreatedByTag = ({repoAddress, tags, onAddTag}: Props) => {\n  const {UserDisplay} = useLaunchPadHooks();\n\n  const plucked = pluckTagFromList(tags);\n\n  if (plucked.type === 'manual') {\n    return <Tag icon=\"account_circle\">Manually launched</Tag>;\n  }\n\n  const buildTagElement = () => {\n    const {type, tag} = plucked;\n    const {value} = tag;\n    switch (type) {\n      case 'user':\n        return <UserDisplay email={tag.value} />;\n      case 'schedule': {\n        return (\n          <Tag icon=\"schedule\">\n            {repoAddress ? (\n              <Link to={workspacePathFromAddress(repoAddress, `/schedules/${value}`)}>{value}</Link>\n            ) : (\n              value\n            )}\n          </Tag>\n        );\n      }\n      case 'sensor': {\n        return (\n          <Tag icon=\"sensors\">\n            {repoAddress ? (\n              <Link to={workspacePathFromAddress(repoAddress, `/sensors/${value}`)}>{value}</Link>\n            ) : (\n              value\n            )}\n          </Tag>\n        );\n      }\n      case 'auto-materialize':\n        return <Tag icon=\"auto_materialize_policy\">Auto-materialize policy</Tag>;\n      case 'auto-observe':\n        return <Tag icon=\"auto_observe\">Auto-observation</Tag>;\n    }\n  };\n\n  const tagElement = buildTagElement();\n  if (!onAddTag) {\n    return tagElement;\n  }\n\n  const {tag} = plucked;\n  const {key, value} = tag;\n  return (\n    <TagActionsPopover\n      data={tag}\n      actions={[\n        {\n          label: 'Add to filter',\n          onClick: () => onAddTag({token: 'tag', value: `${key}=${value}`}),\n        },\n      ]}\n    >\n      {tagElement}\n    </TagActionsPopover>\n  );\n};\n","import {useMutation} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {ProgressBar} from '@blueprintjs/core';\nimport {\n  Button,\n  Colors,\n  DialogBody,\n  DialogFooter,\n  Dialog,\n  Group,\n  Icon,\n  Mono,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {NavigationBlock} from './NavigationBlock';\nimport {DELETE_MUTATION} from './RunUtils';\nimport {DeleteMutation, DeleteMutationVariables} from './types/RunUtils.types';\n\nexport interface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: () => void;\n  onTerminateInstead: () => void;\n  selectedRuns: SelectedRuns;\n}\n\ntype SelectedRuns = {[id: string]: boolean};\n\nconst refineToError = (data: DeleteMutation | null | undefined) => {\n  if (data?.deletePipelineRun.__typename === 'DeletePipelineRunSuccess') {\n    throw new Error('Not an error!');\n  }\n  return data?.deletePipelineRun;\n};\n\ntype Error = ReturnType<typeof refineToError>;\n\ntype DeletionDialogState = {\n  step: 'initial' | 'deleting' | 'completed';\n  frozenRuns: SelectedRuns;\n  deletion: {completed: number; errors: {[id: string]: Error}};\n};\n\ntype DeletionDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'start'}\n  | {type: 'deletion-success'}\n  | {type: 'deletion-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst initializeState = (frozenRuns: SelectedRuns): DeletionDialogState => {\n  return {\n    step: 'initial',\n    frozenRuns,\n    deletion: {completed: 0, errors: {}},\n  };\n};\n\nconst deletionDialogReducer = (\n  prevState: DeletionDialogState,\n  action: DeletionDialogAction,\n): DeletionDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'start':\n      return {...prevState, step: 'deleting'};\n    case 'deletion-success': {\n      const {deletion} = prevState;\n      return {\n        ...prevState,\n        step: 'deleting',\n        deletion: {...deletion, completed: deletion.completed + 1},\n      };\n    }\n    case 'deletion-error': {\n      const {deletion} = prevState;\n      return {\n        ...prevState,\n        step: 'deleting',\n        deletion: {\n          ...deletion,\n          completed: deletion.completed + 1,\n          errors: {...deletion.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const DeletionDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, onTerminateInstead, selectedRuns} = props;\n  const frozenRuns = React.useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = React.useReducer(\n    deletionDialogReducer,\n    frozenRuns.current,\n    initializeState,\n  );\n\n  const runIDs = Object.keys(state.frozenRuns);\n  const count = runIDs.length;\n  const terminatableCount = runIDs.filter((id) => state.frozenRuns[id]).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  React.useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  React.useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [destroy] = useMutation<DeleteMutation, DeleteMutationVariables>(DELETE_MUTATION);\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (const runId of runList) {\n      const {data} = await destroy({variables: {runId}});\n\n      if (data?.deletePipelineRun.__typename === 'DeletePipelineRunSuccess') {\n        dispatch({type: 'deletion-success'});\n      } else {\n        dispatch({type: 'deletion-error', id: runId, error: refineToError(data)});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete();\n  };\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>{`${count} ${count === 1 ? 'run' : 'runs'} will be deleted.`}</div>\n            <div>\n              Deleting runs will not prevent them from continuing to execute, and may result in\n              unexpected behavior.\n            </div>\n            {terminatableCount ? (\n              <div>\n                {terminatableCount > 1 ? (\n                  <>\n                    {`${terminatableCount} of these runs can be terminated. `}\n                    <strong>\n                      Please consider terminating these runs instead of deleting them.\n                    </strong>\n                  </>\n                ) : (\n                  <>\n                    {`1 run can be terminated instead. `}\n                    <strong>Please consider terminating this run instead of deleting it.</strong>\n                  </>\n                )}\n              </div>\n            ) : null}\n            <div>Do you wish to continue with deletion?</div>\n          </Group>\n        );\n      case 'deleting':\n      case 'completed':\n        const value = count > 0 ? state.deletion.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>Deleting…</div>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'deleting' ? (\n              <NavigationBlock message=\"Deletion in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"danger\" onClick={mutate}>\n              {`Yes, delete ${`${count} ${count === 1 ? 'run' : 'runs'}`}`}\n            </Button>\n            {terminatableCount ? (\n              <Button intent=\"primary\" onClick={onTerminateInstead}>\n                {`Terminate ${`${terminatableCount} ${\n                  terminatableCount === 1 ? 'run' : 'runs'\n                }`} instead`}\n              </Button>\n            ) : null}\n          </>\n        );\n      case 'deleting':\n        return (\n          <Button intent=\"danger\" disabled>\n            Deleting…\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'deleting') {\n      return <div>Please do not close the window or navigate away during deletion.</div>;\n    }\n\n    const errors = state.deletion.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.deletion.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"center\">\n            <Icon name=\"check_circle\" color={Colors.Green500} />\n            <div>{`Successfully deleted ${successCount} ${\n              successCount === 1 ? 'run' : 'runs'\n            }.`}</div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"center\">\n              <Icon name=\"warning\" color={Colors.Yellow500} />\n              <div>{`Could not delete ${errorCount} ${errorCount === 1 ? 'run' : 'runs'}.`}</div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8}>\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errors[runId]?.message}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'deleting';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title=\"Delete runs\"\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      onClose={onClose}\n    >\n      <DialogBody>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </DialogBody>\n      <DialogFooter>{buttons()}</DialogFooter>\n    </Dialog>\n  );\n};\n","// eslint-disable-next-line no-restricted-imports\nimport {Placement} from '@blueprintjs/popover2';\nimport React from 'react';\nimport styled, {CSSProperties} from 'styled-components';\n\nimport {Box} from './Box';\nimport {Button} from './Button';\nimport {Colors} from './Colors';\nimport {Popover} from './Popover';\nimport {Subheading} from './Text';\n\nexport enum ProductTourPosition {\n  TOP_LEFT = 'top-start',\n  TOP_CENTER = 'top',\n  TOP_RIGHT = 'top-end',\n  BOTTOM_LEFT = 'bottom-start',\n  BOTTOM_CENTER = 'bottom',\n  BOTTOM_RIGHT = 'bottom-end',\n}\n\ntype ObjectType =\n  | {img: string; video?: undefined; object?: undefined}\n  | {video: string; img?: undefined; object?: undefined}\n  | {object: React.ReactNode; video?: undefined; img?: undefined}\n  | {img?: undefined; video?: undefined; object?: undefined};\n\ntype Props = {\n  children: React.ReactNode;\n  title: React.ReactNode;\n  description?: React.ReactNode;\n  actions?: {\n    next?: () => void;\n    dismiss?: () => void;\n  };\n  position: ProductTourPosition;\n  width?: CSSProperties['width'];\n} & ObjectType;\n\nexport const ProductTour: React.FC<Props> = ({\n  title,\n  description,\n  actions,\n  position,\n  children,\n  img,\n  video,\n  object,\n  width = '260px',\n}) => {\n  const media = React.useMemo(() => {\n    if (img) {\n      return <img src={img} style={{borderRadius: '6px'}} />;\n    }\n    if (video) {\n      return <video src={video} style={{borderRadius: '6px'}} autoPlay loop muted />;\n    }\n    return object;\n  }, [img, video, object]);\n\n  const actionsJsx = React.useMemo(() => {\n    return (\n      <ActionsContainer flex={{gap: 6, direction: 'row'}} margin={{top: 8}}>\n        {actions?.next ? <Button onClick={actions.next}>Next</Button> : null}\n        {actions?.dismiss ? <Button onClick={actions.dismiss}>Dismiss</Button> : null}\n      </ActionsContainer>\n    );\n  }, [actions?.next, actions?.dismiss]);\n\n  return (\n    <Popover\n      isOpen={true}\n      placement={position as Placement}\n      modifiers={{\n        arrow: {enabled: true},\n        preventOverflow: {enabled: true},\n      }}\n      minimal={false}\n      content={\n        <>\n          <div />\n          <ProductTourContainer flex={{direction: 'column', gap: 4}} padding={16} style={{width}}>\n            <Box flex={{direction: 'column', gap: 8}}>\n              {media}\n              <Subheading style={{fontSize: '16px'}}>{title}</Subheading>\n            </Box>\n            <div>{description}</div>\n            {actionsJsx}\n          </ProductTourContainer>\n          <div />\n        </>\n      }\n    >\n      {children}\n    </Popover>\n  );\n};\n\nconst ProductTourContainer = styled(Box)`\n  pointer-events: all;\n  background: ${Colors.Gray900};\n  border-radius: 4px;\n  padding: 16px;\n  box-shadow: 0px 2px 12px rgba(0, 0, 0, 0.12);\n\n  &,\n  button {\n    &,\n    &:hover,\n    &:focus {\n      color: ${Colors.White};\n    }\n  }\n`;\n\nconst ActionsContainer = styled(Box)`\n  > *:not(:first-child) {\n    &,\n    &:hover,\n    &:focus {\n      border: none;\n      box-shadow: none;\n    }\n  }\n  > * {\n    &:hover,\n    &:focus {\n      opacity: 0.9;\n    }\n  }\n`;\n","import {useMutation} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {ProgressBar} from '@blueprintjs/core';\nimport {\n  Button,\n  Colors,\n  DialogBody,\n  DialogFooter,\n  Dialog,\n  Group,\n  Icon,\n  Mono,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {ReexecutionStrategy} from '../graphql/types';\n\nimport {NavigationBlock} from './NavigationBlock';\nimport {LAUNCH_PIPELINE_REEXECUTION_MUTATION} from './RunUtils';\nimport {\n  LaunchPipelineReexecutionMutation,\n  LaunchPipelineReexecutionMutationVariables,\n} from './types/RunUtils.types';\n\ninterface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: (reexecutionState: ReexecutionState) => void;\n  selectedRuns: {[id: string]: string};\n  reexecutionStrategy: ReexecutionStrategy;\n}\n\nconst refineToError = (data: LaunchPipelineReexecutionMutation | null | undefined) => {\n  if (data?.launchPipelineReexecution.__typename === 'LaunchRunSuccess') {\n    throw new Error('Not an error!');\n  }\n  return data?.launchPipelineReexecution;\n};\n\ntype Error = ReturnType<typeof refineToError>;\n\nconst errorText = (error: Error) => {\n  if (!error) {\n    return 'Unknown error';\n  }\n  switch (error.__typename) {\n    case 'ConflictingExecutionParamsError':\n      return 'Conflicting execution parameters';\n    case 'InvalidOutputError':\n      return 'Invalid output';\n    case 'InvalidStepError':\n      return 'Invalid step';\n    case 'NoModeProvidedError':\n      return 'No mode provided';\n    case 'PipelineNotFoundError':\n      return 'Job not found in workspace';\n    case 'PresetNotFoundError':\n      return 'Preset not found';\n    case 'PythonError':\n      return error.message;\n    case 'RunConfigValidationInvalid':\n      return 'Run config invalid';\n    case 'RunConflict':\n      return 'Run conflict';\n    case 'UnauthorizedError':\n      return 'Re-execution not authorized';\n    case 'InvalidSubsetError':\n      return 'Invalid op subset: ' + error.message;\n    default:\n      return 'Unknown error';\n  }\n};\n\ntype ReexecutionState = {completed: number; errors: {[id: string]: Error}};\n\ntype ReexecutionDialogState = {\n  frozenRuns: SelectedRuns;\n  step: 'initial' | 'reexecuting' | 'completed';\n  reexecution: ReexecutionState;\n};\n\ntype SelectedRuns = {[id: string]: string};\n\nconst initializeState = (selectedRuns: SelectedRuns): ReexecutionDialogState => {\n  return {\n    frozenRuns: selectedRuns,\n    step: 'initial',\n    reexecution: {completed: 0, errors: {}},\n  };\n};\n\ntype ReexecutionDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'start'}\n  | {type: 'reexecution-success'}\n  | {type: 'reexecution-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst reexecutionDialogReducer = (\n  prevState: ReexecutionDialogState,\n  action: ReexecutionDialogAction,\n): ReexecutionDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'start':\n      return {...prevState, step: 'reexecuting'};\n    case 'reexecution-success': {\n      const {reexecution} = prevState;\n      return {\n        ...prevState,\n        step: 'reexecuting',\n        reexecution: {...reexecution, completed: reexecution.completed + 1},\n      };\n    }\n    case 'reexecution-error': {\n      const {reexecution} = prevState;\n      return {\n        ...prevState,\n        step: 'reexecuting',\n        reexecution: {\n          ...reexecution,\n          completed: reexecution.completed + 1,\n          errors: {...reexecution.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const ReexecutionDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, reexecutionStrategy, selectedRuns} = props;\n\n  // Freeze the selected IDs, since the list may change as runs continue processing and\n  // re-executing. We want to preserve the list we're given.\n  const frozenRuns = React.useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = React.useReducer(\n    reexecutionDialogReducer,\n    frozenRuns.current,\n    initializeState,\n  );\n\n  const count = Object.keys(state.frozenRuns).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  React.useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  React.useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [reexecute] = useMutation<\n    LaunchPipelineReexecutionMutation,\n    LaunchPipelineReexecutionMutationVariables\n  >(LAUNCH_PIPELINE_REEXECUTION_MUTATION);\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (const runId of runList) {\n      const {data} = await reexecute({\n        variables: {\n          reexecutionParams: {\n            parentRunId: runId,\n            strategy: reexecutionStrategy,\n          },\n        },\n      });\n\n      if (data?.launchPipelineReexecution.__typename === 'LaunchRunSuccess') {\n        dispatch({type: 'reexecution-success'});\n      } else {\n        dispatch({type: 'reexecution-error', id: runId, error: refineToError(data)});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete(state.reexecution);\n  };\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Group direction=\"column\" spacing={16}>\n              <div>No runs selected for re-execution.</div>\n              <div>The runs you selected may already have finished executing.</div>\n            </Group>\n          );\n        }\n\n        const message = () => {\n          if (reexecutionStrategy === ReexecutionStrategy.ALL_STEPS) {\n            return (\n              <span>\n                {`${count} ${count === 1 ? 'run' : 'runs'} will be re-executed `}\n                <strong>with all steps</strong>. Do you wish to continue?\n              </span>\n            );\n          }\n          return (\n            <span>\n              {`${count} ${count === 1 ? 'run' : 'runs'} will be re-executed `}\n              <strong>from failure</strong>. Do you wish to continue?\n            </span>\n          );\n        };\n\n        return (\n          <Group direction=\"column\" spacing={16}>\n            <div>{message()}</div>\n          </Group>\n        );\n      case 'reexecuting':\n      case 'completed':\n        const value = count > 0 ? state.reexecution.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'reexecuting' ? (\n              <NavigationBlock message=\"Re-execution in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Button intent=\"none\" onClick={onClose}>\n              OK\n            </Button>\n          );\n        }\n\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"primary\" onClick={mutate}>\n              {`Re-execute ${`${count} ${count === 1 ? 'run' : 'runs'}`}`}\n            </Button>\n          </>\n        );\n      case 'reexecuting':\n        return (\n          <Button intent=\"primary\" disabled>\n            {`Re-executing ${`${count} ${count === 1 ? 'run' : 'runs'}...`}`}\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'reexecuting') {\n      return <div>Please do not close the window or navigate away during re-execution.</div>;\n    }\n\n    const errors = state.reexecution.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.reexecution.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n            <Icon name=\"check_circle\" color={Colors.Green500} />\n            <div>\n              {`Successfully requested re-execution for ${successCount} ${\n                successCount === 1 ? 'run' : `runs`\n              }.`}\n            </div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n              <Icon name=\"warning\" color={Colors.Yellow500} />\n              <div>\n                {`Could not request re-execution for ${errorCount} ${\n                  errorCount === 1 ? 'run' : 'runs'\n                }:`}\n              </div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8} alignItems=\"baseline\">\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errorText(errors[runId])}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'reexecuting';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title={\n        reexecutionStrategy === ReexecutionStrategy.ALL_STEPS\n          ? 'Re-execute runs'\n          : 'Re-execute runs from failure'\n      }\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      onClose={onClose}\n    >\n      <DialogBody>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </DialogBody>\n      <DialogFooter>{buttons()}</DialogFooter>\n    </Dialog>\n  );\n};\n","import {gql, useLazyQuery} from '@apollo/client';\nimport {\n  Button,\n  Icon,\n  MenuDivider,\n  MenuExternalLink,\n  MenuItem,\n  Menu,\n  Popover,\n  Tooltip,\n  DialogFooter,\n  Dialog,\n  JoinedButtons,\n  DialogBody,\n  Box,\n  Colors,\n  StyledRawCodeMirror,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {AppContext} from '../app/AppContext';\nimport {showSharedToaster} from '../app/DomUtils';\nimport {DEFAULT_DISABLED_REASON} from '../app/Permissions';\nimport {useCopyToClipboard} from '../app/browser';\nimport {ReexecutionStrategy} from '../graphql/types';\nimport {NO_LAUNCH_PERMISSION_MESSAGE} from '../launchpad/LaunchRootExecutionButton';\nimport {getPipelineSnapshotLink} from '../pipelines/PipelinePathUtils';\nimport {AnchorButton} from '../ui/AnchorButton';\nimport {MenuLink} from '../ui/MenuLink';\nimport {isThisThingAJob} from '../workspace/WorkspaceContext';\nimport {useRepositoryForRunWithParentSnapshot} from '../workspace/useRepositoryForRun';\nimport {workspacePathFromRunDetails} from '../workspace/workspacePath';\n\nimport {DeletionDialog} from './DeletionDialog';\nimport {ReexecutionDialog} from './ReexecutionDialog';\nimport {doneStatuses, failedStatuses} from './RunStatuses';\nimport {RunTags} from './RunTags';\nimport {RunsQueryRefetchContext} from './RunUtils';\nimport {RunFilterToken} from './RunsFilterInput';\nimport {TerminationDialog} from './TerminationDialog';\nimport {\n  PipelineEnvironmentQuery,\n  PipelineEnvironmentQueryVariables,\n} from './types/RunActionsMenu.types';\nimport {RunTableRunFragment} from './types/RunTable.types';\nimport {useJobAvailabilityErrorForRun} from './useJobAvailabilityErrorForRun';\nimport {useJobReexecution} from './useJobReExecution';\n\ninterface Props {\n  run: RunTableRunFragment;\n  additionalActionsForRun?: (run: RunTableRunFragment) => React.ReactNode[];\n  onAddTag?: (token: RunFilterToken) => void;\n}\n\nexport const RunActionsMenu = React.memo(({run, onAddTag, additionalActionsForRun}: Props) => {\n  const {refetch} = React.useContext(RunsQueryRefetchContext);\n  const [visibleDialog, setVisibleDialog] = React.useState<\n    'none' | 'terminate' | 'delete' | 'config' | 'tags'\n  >('none');\n\n  const {rootServerURI} = React.useContext(AppContext);\n\n  const copyConfig = useCopyToClipboard();\n  const reexecute = useJobReexecution({onCompleted: refetch});\n\n  const [loadEnv, {called, loading, data}] = useLazyQuery<\n    PipelineEnvironmentQuery,\n    PipelineEnvironmentQueryVariables\n  >(PIPELINE_ENVIRONMENT_QUERY, {\n    variables: {runId: run.id},\n  });\n\n  const closeDialogs = () => {\n    setVisibleDialog('none');\n  };\n\n  const onComplete = () => {\n    refetch();\n  };\n\n  const pipelineRun =\n    data?.pipelineRunOrError?.__typename === 'Run' ? data?.pipelineRunOrError : null;\n  const runConfigYaml = pipelineRun?.runConfigYaml;\n\n  const repoMatch = useRepositoryForRunWithParentSnapshot(pipelineRun);\n  const jobError = useJobAvailabilityErrorForRun({\n    ...run,\n    parentPipelineSnapshotId: pipelineRun?.parentPipelineSnapshotId,\n  });\n\n  const isFinished = doneStatuses.has(run.status);\n  const isJob = !!(repoMatch && isThisThingAJob(repoMatch?.match, run.pipelineName));\n\n  const infoReady = called ? !loading : false;\n\n  const reexecutionDisabledState = React.useMemo(() => {\n    if (!run.hasReExecutePermission) {\n      return {disabled: true, message: DEFAULT_DISABLED_REASON};\n    }\n    if (jobError) {\n      return {disabled: jobError.disabled, message: jobError.tooltip};\n    }\n    if (!infoReady) {\n      return {disabled: true};\n    }\n    return {disabled: false};\n  }, [run.hasReExecutePermission, jobError, infoReady]);\n\n  return (\n    <>\n      <JoinedButtons>\n        <AnchorButton to={`/runs/${run.id}`}>View run</AnchorButton>\n        <Popover\n          content={\n            <Menu>\n              <MenuItem\n                tagName=\"button\"\n                style={{minWidth: 200}}\n                text={loading ? 'Loading configuration...' : 'View configuration...'}\n                disabled={!runConfigYaml}\n                icon=\"open_in_new\"\n                onClick={() => setVisibleDialog('config')}\n              />\n              <MenuItem\n                tagName=\"button\"\n                text={\n                  <div style={{display: 'contents'}}>\n                    View all tags\n                    <Box\n                      flex={{\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        display: 'inline-flex',\n                      }}\n                      padding={{horizontal: 8}}\n                    >\n                      <SlashShortcut>t</SlashShortcut>\n                    </Box>\n                  </div>\n                }\n                icon=\"tag\"\n                onClick={() => setVisibleDialog('tags')}\n              />\n\n              {run.pipelineSnapshotId ? (\n                <LinkNoUnderline\n                  to={getPipelineSnapshotLink(run.pipelineName, run.pipelineSnapshotId)}\n                >\n                  <MenuItem\n                    tagName=\"button\"\n                    icon=\"job\"\n                    text=\"View snapshot\"\n                    onClick={() => setVisibleDialog('tags')}\n                  />\n                </LinkNoUnderline>\n              ) : null}\n              <MenuDivider />\n              <>\n                <Tooltip\n                  content={\n                    run.hasReExecutePermission\n                      ? OPEN_LAUNCHPAD_UNKNOWN\n                      : NO_LAUNCH_PERMISSION_MESSAGE\n                  }\n                  position=\"left\"\n                  disabled={infoReady && run.hasReExecutePermission}\n                  targetTagName=\"div\"\n                >\n                  <MenuLink\n                    text=\"Open in Launchpad...\"\n                    disabled={!infoReady || !run.hasReExecutePermission}\n                    icon=\"edit\"\n                    to={workspacePathFromRunDetails({\n                      id: run.id,\n                      pipelineName: run.pipelineName,\n                      repositoryName: repoMatch?.match.repository.name,\n                      repositoryLocationName: repoMatch?.match.repositoryLocation.name,\n                      isJob,\n                    })}\n                  />\n                </Tooltip>\n                <Tooltip\n                  content={reexecutionDisabledState.message || ''}\n                  position=\"left\"\n                  canShow={reexecutionDisabledState.disabled}\n                  targetTagName=\"div\"\n                >\n                  <MenuItem\n                    tagName=\"button\"\n                    text=\"Re-execute\"\n                    disabled={reexecutionDisabledState.disabled}\n                    icon=\"refresh\"\n                    onClick={async () => {\n                      await reexecute(run, ReexecutionStrategy.ALL_STEPS);\n                    }}\n                  />\n                </Tooltip>\n                {isFinished || !run.hasTerminatePermission ? null : (\n                  <MenuItem\n                    tagName=\"button\"\n                    icon=\"cancel\"\n                    text=\"Terminate\"\n                    onClick={() => setVisibleDialog('terminate')}\n                  />\n                )}\n                {additionalActionsForRun?.(run)}\n                <MenuDivider />\n              </>\n              <MenuExternalLink\n                text=\"Download debug file\"\n                icon=\"download_for_offline\"\n                download\n                href={`${rootServerURI}/download_debug/${run.id}`}\n              />\n              {run.hasDeletePermission ? (\n                <MenuItem\n                  tagName=\"button\"\n                  icon=\"delete\"\n                  text=\"Delete\"\n                  intent=\"danger\"\n                  onClick={() => setVisibleDialog('delete')}\n                />\n              ) : null}\n            </Menu>\n          }\n          position=\"bottom-right\"\n          onOpening={() => {\n            if (!called) {\n              loadEnv();\n            }\n          }}\n        >\n          <Button icon={<Icon name=\"expand_more\" />} />\n        </Popover>\n      </JoinedButtons>\n      {run.hasTerminatePermission ? (\n        <TerminationDialog\n          isOpen={visibleDialog === 'terminate'}\n          onClose={closeDialogs}\n          onComplete={onComplete}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n      {run.hasDeletePermission ? (\n        <DeletionDialog\n          isOpen={visibleDialog === 'delete'}\n          onClose={closeDialogs}\n          onComplete={onComplete}\n          onTerminateInstead={() => setVisibleDialog('terminate')}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n      <Dialog\n        isOpen={visibleDialog === 'tags'}\n        title=\"Tags\"\n        canOutsideClickClose\n        canEscapeKeyClose\n        onClose={closeDialogs}\n      >\n        <DialogBody>\n          <RunTags\n            tags={run.tags}\n            mode={isJob ? (run.mode !== 'default' ? run.mode : null) : run.mode}\n            onAddTag={onAddTag}\n          />\n        </DialogBody>\n        <DialogFooter topBorder>\n          <Button intent=\"primary\" onClick={closeDialogs}>\n            Close\n          </Button>\n        </DialogFooter>\n      </Dialog>\n      <Dialog\n        isOpen={visibleDialog === 'config'}\n        title=\"Config\"\n        canOutsideClickClose\n        canEscapeKeyClose\n        onClose={closeDialogs}\n      >\n        <StyledRawCodeMirror\n          value={runConfigYaml || ''}\n          options={{readOnly: true, lineNumbers: true, mode: 'yaml'}}\n        />\n        <DialogFooter topBorder>\n          <Button\n            intent=\"none\"\n            onClick={async () => {\n              copyConfig(runConfigYaml || '');\n              await showSharedToaster({\n                intent: 'success',\n                icon: 'copy_to_clipboard_done',\n                message: 'Copied!',\n              });\n            }}\n          >\n            Copy config\n          </Button>\n          <Button intent=\"primary\" onClick={closeDialogs}>\n            OK\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    </>\n  );\n});\n\nexport const RunBulkActionsMenu: React.FC<{\n  selected: RunTableRunFragment[];\n  clearSelection: () => void;\n}> = React.memo(({selected, clearSelection}) => {\n  const {refetch} = React.useContext(RunsQueryRefetchContext);\n\n  const [visibleDialog, setVisibleDialog] = React.useState<\n    'none' | 'terminate' | 'delete' | 'reexecute-from-failure' | 'reexecute'\n  >('none');\n\n  const canTerminateAny = React.useMemo(() => {\n    return selected.some((run) => run.hasTerminatePermission);\n  }, [selected]);\n\n  const canDeleteAny = React.useMemo(() => {\n    return selected.some((run) => run.hasTerminatePermission);\n  }, [selected]);\n\n  const canReexecuteAny = React.useMemo(() => {\n    return selected.some((run) => run.hasReExecutePermission);\n  }, [selected]);\n\n  const disabled = !canTerminateAny && !canDeleteAny;\n\n  const terminatableRuns = selected.filter(\n    (r) => !doneStatuses.has(r?.status) && r.hasTerminatePermission,\n  );\n  const terminateableIDs = terminatableRuns.map((r) => r.id);\n  const terminateableMap = terminatableRuns.reduce(\n    (accum, run) => ({...accum, [run.id]: run.canTerminate}),\n    {},\n  );\n\n  const deleteableIDs = selected.map((run) => run.id);\n  const deletionMap = selected.reduce((accum, run) => ({...accum, [run.id]: run.canTerminate}), {});\n\n  const reexecuteFromFailureRuns = selected.filter(\n    (r) => failedStatuses.has(r?.status) && r.hasReExecutePermission,\n  );\n  const reexecuteFromFailureMap = reexecuteFromFailureRuns.reduce(\n    (accum, run) => ({...accum, [run.id]: run.id}),\n    {},\n  );\n\n  const reexecutableRuns = selected.filter(\n    (r) => doneStatuses.has(r?.status) && r.hasReExecutePermission,\n  );\n  const reexecutableMap = reexecutableRuns.reduce(\n    (accum, run) => ({...accum, [run.id]: run.id}),\n    {},\n  );\n\n  const closeDialogs = () => {\n    setVisibleDialog('none');\n  };\n\n  const onComplete = () => {\n    clearSelection();\n    refetch();\n  };\n\n  return (\n    <>\n      <Popover\n        disabled={disabled || selected.length === 0}\n        content={\n          <Menu>\n            {canTerminateAny ? (\n              <MenuItem\n                icon=\"cancel\"\n                text={`Terminate ${terminateableIDs.length} ${\n                  terminateableIDs.length === 1 ? 'run' : 'runs'\n                }`}\n                disabled={terminateableIDs.length === 0}\n                onClick={() => {\n                  setVisibleDialog('terminate');\n                }}\n              />\n            ) : null}\n            {canDeleteAny ? (\n              <MenuItem\n                icon=\"delete\"\n                intent=\"danger\"\n                text={`Delete ${deleteableIDs.length} ${\n                  deleteableIDs.length === 1 ? 'run' : 'runs'\n                }`}\n                disabled={deleteableIDs.length === 0}\n                onClick={() => {\n                  setVisibleDialog('delete');\n                }}\n              />\n            ) : null}\n            {canReexecuteAny ? (\n              <>\n                <MenuItem\n                  icon=\"refresh\"\n                  text={`Re-execute ${reexecutableRuns.length} ${\n                    reexecutableRuns.length === 1 ? 'run' : 'runs'\n                  }`}\n                  disabled={reexecutableRuns.length === 0}\n                  onClick={() => {\n                    setVisibleDialog('reexecute');\n                  }}\n                />\n                <MenuItem\n                  icon=\"refresh\"\n                  text={`Re-execute ${reexecuteFromFailureRuns.length} ${\n                    reexecuteFromFailureRuns.length === 1 ? 'run' : 'runs'\n                  } from failure`}\n                  disabled={reexecuteFromFailureRuns.length === 0}\n                  onClick={() => {\n                    setVisibleDialog('reexecute-from-failure');\n                  }}\n                />\n              </>\n            ) : null}\n          </Menu>\n        }\n        position=\"bottom-right\"\n      >\n        <Button\n          disabled={disabled || selected.length === 0}\n          rightIcon={<Icon name=\"expand_more\" />}\n          intent=\"primary\"\n        >\n          Actions\n        </Button>\n      </Popover>\n      <TerminationDialog\n        isOpen={visibleDialog === 'terminate'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={terminateableMap}\n      />\n      <DeletionDialog\n        isOpen={visibleDialog === 'delete'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        onTerminateInstead={() => setVisibleDialog('terminate')}\n        selectedRuns={deletionMap}\n      />\n      <ReexecutionDialog\n        isOpen={visibleDialog === 'reexecute-from-failure'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={reexecuteFromFailureMap}\n        reexecutionStrategy={ReexecutionStrategy.FROM_FAILURE}\n      />\n      <ReexecutionDialog\n        isOpen={visibleDialog === 'reexecute'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={reexecutableMap}\n        reexecutionStrategy={ReexecutionStrategy.ALL_STEPS}\n      />\n    </>\n  );\n});\n\nconst OPEN_LAUNCHPAD_UNKNOWN =\n  'Launchpad is unavailable because the pipeline is not present in the current repository.';\n\n// Avoid fetching envYaml and parentPipelineSnapshotId on load in Runs page, they're slow.\nexport const PIPELINE_ENVIRONMENT_QUERY = gql`\n  query PipelineEnvironmentQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      ... on Run {\n        id\n        pipelineName\n        pipelineSnapshotId\n        runConfigYaml\n        pipelineName\n        parentPipelineSnapshotId\n        repositoryOrigin {\n          id\n          repositoryName\n          repositoryLocationName\n        }\n      }\n    }\n  }\n`;\n\nconst SlashShortcut = styled.div`\n  border-radius: 4px;\n  padding: 0px 6px;\n  background: ${Colors.Gray100};\n  color: ${Colors.Gray500};\n`;\n\nconst LinkNoUnderline = styled(Link)`\n  text-decoration: none !important;\n`;\n","export default \"/_next/static/media/ShowAndHideRunTags.3fa9746ba2f415094d257d3c8e73389d.mp4\";","import {gql} from '@apollo/client';\nimport {\n  Box,\n  Checkbox,\n  Colors,\n  Icon,\n  NonIdealState,\n  Table,\n  Mono,\n  Tag,\n  Button,\n  Dialog,\n  DialogBody,\n  DialogFooter,\n  ButtonLink,\n  ProductTour,\n  ProductTourPosition,\n  Caption,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {ShortcutHandler} from '../app/ShortcutHandler';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {RunsFilter} from '../graphql/types';\nimport {useSelectionReducer} from '../hooks/useSelectionReducer';\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {AnchorButton} from '../ui/AnchorButton';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\nimport {useRepositoryForRunWithoutSnapshot} from '../workspace/useRepositoryForRun';\nimport {workspacePipelinePath, workspacePipelinePathGuessRepo} from '../workspace/workspacePath';\n\nimport {AssetKeyTagCollection, AssetCheckTagCollection} from './AssetTagCollections';\nimport {CreatedByTagCell} from './CreatedByTag';\nimport {RunActionsMenu, RunBulkActionsMenu} from './RunActionsMenu';\nimport {RunStatusTagWithStats} from './RunStatusTag';\nimport {DagsterTag, TagType} from './RunTag';\nimport {RunTags} from './RunTags';\nimport {\n  assetKeysForRun,\n  RunStateSummary,\n  RunTime,\n  RUN_TIME_FRAGMENT,\n  titleForRun,\n} from './RunUtils';\nimport {RunFilterToken, runsPathWithFilters} from './RunsFilterInput';\nimport ShowAndHideTagsMP4 from './ShowAndHideRunTags.mp4';\nimport {RunTableRunFragment} from './types/RunTable.types';\n\ninterface RunTableProps {\n  runs: RunTableRunFragment[];\n  filter?: RunsFilter;\n  onAddTag?: (token: RunFilterToken) => void;\n  actionBarComponents?: React.ReactNode;\n  highlightedIds?: string[];\n  additionalColumnHeaders?: React.ReactNode[];\n  additionalColumnsForRow?: (run: RunTableRunFragment) => React.ReactNode[];\n  belowActionBarComponents?: React.ReactNode;\n  hideCreatedBy?: boolean;\n  additionalActionsForRun?: (run: RunTableRunFragment) => JSX.Element[];\n  emptyState?: () => React.ReactNode;\n}\n\nexport const RunTable = (props: RunTableProps) => {\n  const {\n    runs,\n    filter,\n    onAddTag,\n    highlightedIds,\n    actionBarComponents,\n    belowActionBarComponents,\n    hideCreatedBy,\n    emptyState,\n  } = props;\n  const allIds = runs.map((r) => r.id);\n\n  const [{checkedIds}, {onToggleFactory, onToggleAll}] = useSelectionReducer(allIds);\n\n  const canTerminateOrDeleteAny = React.useMemo(() => {\n    return runs.some((run) => run.hasTerminatePermission || run.hasDeletePermission);\n  }, [runs]);\n\n  function content() {\n    if (runs.length === 0) {\n      const anyFilter = !!Object.keys(filter || {}).length;\n      if (emptyState) {\n        return <>{emptyState()}</>;\n      }\n\n      return (\n        <div>\n          <Box margin={{vertical: 32}}>\n            {anyFilter ? (\n              <NonIdealState\n                icon=\"run\"\n                title=\"No matching runs\"\n                description=\"No runs were found for this filter.\"\n              />\n            ) : (\n              <NonIdealState\n                icon=\"run\"\n                title=\"No runs found\"\n                description={\n                  <Box flex={{direction: 'column', gap: 12}}>\n                    <div>You have not launched any runs yet.</div>\n                    <Box flex={{direction: 'row', gap: 12, alignItems: 'center'}}>\n                      <AnchorButton icon={<Icon name=\"add_circle\" />} to=\"/overview/jobs\">\n                        Launch a run\n                      </AnchorButton>\n                      <span>or</span>\n                      <AnchorButton icon={<Icon name=\"materialization\" />} to=\"/asset-groups\">\n                        Materialize an asset\n                      </AnchorButton>\n                    </Box>\n                  </Box>\n                }\n              />\n            )}\n          </Box>\n        </div>\n      );\n    } else {\n      return (\n        <Table>\n          <thead>\n            <tr>\n              {canTerminateOrDeleteAny ? (\n                <th style={{width: 42, paddingTop: 0, paddingBottom: 0}}>\n                  <Checkbox\n                    indeterminate={checkedIds.size > 0 && checkedIds.size !== runs.length}\n                    checked={checkedIds.size === runs.length}\n                    onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                      if (e.target instanceof HTMLInputElement) {\n                        onToggleAll(e.target.checked);\n                      }\n                    }}\n                  />\n                </th>\n              ) : null}\n              <th style={{width: 90}}>Run ID</th>\n              <th style={{width: 180}}>Created date</th>\n              <th>\n                <TargetHeader />\n              </th>\n              {hideCreatedBy ? null : <th style={{width: 160}}>Launched by</th>}\n              <th style={{width: 120}}>Status</th>\n              <th style={{width: 190}}>Duration</th>\n              {props.additionalColumnHeaders}\n              <th style={{width: 52}} />\n            </tr>\n          </thead>\n          <tbody>\n            {runs.map((run) => (\n              <RunRow\n                canTerminateOrDelete={run.hasTerminatePermission || run.hasDeletePermission}\n                run={run}\n                key={run.id}\n                onAddTag={onAddTag}\n                checked={checkedIds.has(run.id)}\n                additionalColumns={props.additionalColumnsForRow?.(run)}\n                additionalActionsForRun={props.additionalActionsForRun}\n                onToggleChecked={onToggleFactory(run.id)}\n                isHighlighted={highlightedIds && highlightedIds.includes(run.id)}\n                hideCreatedBy={hideCreatedBy}\n              />\n            ))}\n          </tbody>\n        </Table>\n      );\n    }\n  }\n\n  const selectedFragments = runs.filter((run) => checkedIds.has(run.id));\n\n  return (\n    <>\n      <ActionBar\n        top={\n          <Box\n            flex={{\n              direction: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              grow: 1,\n            }}\n          >\n            {actionBarComponents}\n            <RunBulkActionsMenu\n              selected={selectedFragments}\n              clearSelection={() => onToggleAll(false)}\n            />\n          </Box>\n        }\n        bottom={belowActionBarComponents}\n      />\n      {content()}\n    </>\n  );\n};\n\nexport const RUN_TAGS_FRAGMENT = gql`\n  fragment RunTagsFragment on PipelineTag {\n    key\n    value\n  }\n`;\n\nexport const RUN_TABLE_RUN_FRAGMENT = gql`\n  fragment RunTableRunFragment on Run {\n    id\n    status\n    stepKeysToExecute\n    canTerminate\n    hasReExecutePermission\n    hasTerminatePermission\n    hasDeletePermission\n    mode\n    rootRunId\n    parentRunId\n    pipelineSnapshotId\n    pipelineName\n    repositoryOrigin {\n      id\n      repositoryName\n      repositoryLocationName\n    }\n    solidSelection\n    assetSelection {\n      ... on AssetKey {\n        path\n      }\n    }\n    assetCheckSelection {\n      name\n      assetKey {\n        path\n      }\n    }\n    status\n    tags {\n      ...RunTagsFragment\n    }\n    ...RunTimeFragment\n  }\n\n  ${RUN_TIME_FRAGMENT}\n  ${RUN_TAGS_FRAGMENT}\n`;\n\nconst RunRow: React.FC<{\n  run: RunTableRunFragment;\n  canTerminateOrDelete: boolean;\n  onAddTag?: (token: RunFilterToken) => void;\n  checked?: boolean;\n  onToggleChecked?: (values: {checked: boolean; shiftKey: boolean}) => void;\n  additionalColumns?: React.ReactNode[];\n  additionalActionsForRun?: (run: RunTableRunFragment) => React.ReactNode[];\n  isHighlighted?: boolean;\n  hideCreatedBy?: boolean;\n}> = ({\n  run,\n  canTerminateOrDelete,\n  onAddTag,\n  checked,\n  onToggleChecked,\n  additionalColumns,\n  additionalActionsForRun,\n  isHighlighted,\n  hideCreatedBy,\n}) => {\n  const {pipelineName} = run;\n  const repo = useRepositoryForRunWithoutSnapshot(run);\n\n  const isJob = React.useMemo(() => {\n    if (repo) {\n      const pipelinesAndJobs = repo.match.repository.pipelines;\n      const match = pipelinesAndJobs.find((pipelineOrJob) => pipelineOrJob.name === pipelineName);\n      return !!match?.isJob;\n    }\n    return false;\n  }, [repo, pipelineName]);\n\n  const repoAddressGuess = React.useMemo(() => {\n    if (repo) {\n      const {match} = repo;\n      return buildRepoAddress(match.repository.name, match.repositoryLocation.name);\n    }\n    return null;\n  }, [repo]);\n\n  const onChange = (e: React.FormEvent<HTMLInputElement>) => {\n    if (e.target instanceof HTMLInputElement) {\n      const {checked} = e.target;\n      const shiftKey =\n        e.nativeEvent instanceof MouseEvent && e.nativeEvent.getModifierState('Shift');\n      onToggleChecked && onToggleChecked({checked, shiftKey});\n    }\n  };\n\n  // Most system tags are unpinned by default so we track pinned for these.\n  const [pinnedSystemTags, setPinnedSystemTags] = useStateWithStorage(\n    'pinned-system-tags',\n    (value) => {\n      if (Array.isArray(value)) {\n        return value;\n      }\n      return [];\n    },\n  );\n\n  // All user tags are pinned by default so we track unpinned.\n  const [unpinnedTags, setUnpinnedTags] = useStateWithStorage('unpinned-tags', (value) => {\n    if (Array.isArray(value)) {\n      return value;\n    }\n    return [];\n  });\n\n  const allTagsWithPinned = React.useMemo(() => {\n    const allTags: Omit<(typeof run.tags)[0], '__typename'>[] = [...run.tags];\n    if ((isJob && run.mode !== 'default') || !isJob) {\n      allTags.push({\n        key: 'mode',\n        value: run.mode,\n      });\n    }\n    return allTags.map((tag) => {\n      return {\n        ...tag,\n        pinned: isUnpinnedByDefaultSystemTag(tag.key)\n          ? pinnedSystemTags.indexOf(tag.key) !== -1\n          : unpinnedTags.indexOf(tag.key) === -1,\n      };\n    });\n  }, [run, isJob, pinnedSystemTags, unpinnedTags]);\n\n  const isReexecution = run.tags.some((tag) => tag.key === DagsterTag.ParentRunId);\n\n  const targetBackfill = allTagsWithPinned.find((tag) => tag.key === DagsterTag.Backfill);\n\n  const [showRunTags, setShowRunTags] = React.useState(false);\n  const [isHovered, setIsHovered] = React.useState(false);\n\n  const tagsToShow = React.useMemo(() => {\n    const tagKeys: Set<string> = new Set([]);\n    const tags: TagType[] = [];\n    if (targetBackfill && targetBackfill.pinned) {\n      const link = run.assetSelection?.length\n        ? `/overview/backfills/${targetBackfill.value}`\n        : runsPathWithFilters([\n            {\n              token: 'tag',\n              value: `${DagsterTag.Backfill}=${targetBackfill.value}`,\n            },\n          ]);\n      tags.push({\n        ...targetBackfill,\n        link,\n      });\n      tagKeys.add(DagsterTag.Backfill as string);\n    }\n    allTagsWithPinned.forEach((tag) => {\n      if (tagKeys.has(tag.key)) {\n        // We already added this tag\n        return;\n      }\n      if (tag.pinned) {\n        tags.push(tag);\n      }\n    });\n    return tags;\n  }, [targetBackfill, allTagsWithPinned, run.assetSelection?.length]);\n\n  const onToggleTagPin = React.useCallback(\n    (tagKey: string) => {\n      if (isUnpinnedByDefaultSystemTag(tagKey)) {\n        setPinnedSystemTags((pinnedSystemTags) => toggleTag(pinnedSystemTags, tagKey));\n      } else {\n        setUnpinnedTags((unpinnedTags) => toggleTag(unpinnedTags, tagKey));\n      }\n    },\n    [setUnpinnedTags, setPinnedSystemTags],\n  );\n\n  return (\n    <Row\n      highlighted={!!isHighlighted}\n      onMouseEnter={() => {\n        setIsHovered(true);\n      }}\n      onMouseLeave={() => {\n        setIsHovered(false);\n      }}\n    >\n      {canTerminateOrDelete ? (\n        <td>{onToggleChecked ? <Checkbox checked={!!checked} onChange={onChange} /> : null}</td>\n      ) : null}\n      <td>\n        <Link to={`/runs/${run.id}`}>\n          <Mono>{titleForRun(run)}</Mono>\n        </Link>\n      </td>\n      <td>\n        <Box flex={{direction: 'column', gap: 4}}>\n          <RunTime run={run} />\n          {isReexecution ? (\n            <div>\n              <Tag icon=\"cached\">Re-execution</Tag>\n            </div>\n          ) : null}\n        </Box>\n      </td>\n      <td style={{position: 'relative'}}>\n        <Box flex={{direction: 'column', gap: 5}}>\n          {isHiddenAssetGroupJob(run.pipelineName) ? (\n            <Box flex={{gap: 16}}>\n              <AssetKeyTagCollection assetKeys={assetKeysForRun(run)} />\n              <AssetCheckTagCollection assetChecks={run.assetCheckSelection} />\n            </Box>\n          ) : (\n            <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n              <PipelineReference\n                isJob={isJob}\n                showIcon\n                pipelineName={run.pipelineName}\n                pipelineHrefContext=\"no-link\"\n              />\n              <Link\n                to={\n                  repo\n                    ? workspacePipelinePath({\n                        repoName: repo.match.repository.name,\n                        repoLocation: repo.match.repositoryLocation.name,\n                        pipelineName: run.pipelineName,\n                        isJob,\n                      })\n                    : workspacePipelinePathGuessRepo(run.pipelineName)\n                }\n                target=\"_blank\"\n              >\n                <Icon name=\"open_in_new\" color={Colors.Blue500} />\n              </Link>\n            </Box>\n          )}\n          <Box\n            flex={{direction: 'row', alignItems: 'center', wrap: 'wrap'}}\n            style={{gap: '4px 8px'}}\n          >\n            <RunTagsWrapper>\n              {tagsToShow.length ? (\n                <RunTags tags={tagsToShow} onAddTag={onAddTag} onToggleTagPin={onToggleTagPin} />\n              ) : null}\n            </RunTagsWrapper>\n            {allTagsWithPinned.length > tagsToShow.length ? (\n              <Caption>\n                <ButtonLink\n                  onClick={() => {\n                    setShowRunTags(true);\n                  }}\n                  color={Colors.Gray700}\n                  style={{margin: '-4px', padding: '4px'}}\n                >\n                  View all tags ({allTagsWithPinned.length})\n                </ButtonLink>\n              </Caption>\n            ) : null}\n          </Box>\n        </Box>\n        {isHovered && allTagsWithPinned.length ? (\n          <ShortcutHandler\n            key=\"runtabletags\"\n            onShortcut={() => {\n              setShowRunTags((showRunTags) => !showRunTags);\n            }}\n            shortcutLabel=\"t\"\n            shortcutFilter={(e) => e.code === 'KeyT'}\n          >\n            {null}\n          </ShortcutHandler>\n        ) : null}\n      </td>\n      {hideCreatedBy ? null : (\n        <td>\n          <CreatedByTagCell\n            repoAddress={repoAddressGuess}\n            tags={run.tags || []}\n            onAddTag={onAddTag}\n          />\n        </td>\n      )}\n      <td>\n        <RunStatusTagWithStats status={run.status} runId={run.id} />\n      </td>\n      <td>\n        <RunStateSummary run={run} />\n      </td>\n      {additionalColumns}\n      <td>\n        <RunActionsMenu\n          run={run}\n          onAddTag={onAddTag}\n          additionalActionsForRun={additionalActionsForRun}\n        />\n      </td>\n      <Dialog\n        isOpen={showRunTags}\n        title=\"Tags\"\n        canOutsideClickClose\n        canEscapeKeyClose\n        onClose={() => {\n          setShowRunTags(false);\n        }}\n      >\n        <DialogBody>\n          <RunTags tags={allTagsWithPinned} onAddTag={onAddTag} onToggleTagPin={onToggleTagPin} />\n        </DialogBody>\n        <DialogFooter topBorder>\n          <Button\n            intent=\"primary\"\n            onClick={() => {\n              setShowRunTags(false);\n            }}\n          >\n            Close\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    </Row>\n  );\n};\n\nconst Row = styled.tr<{highlighted: boolean}>`\n  ${({highlighted}) =>\n    highlighted ? `box-shadow: inset 3px 3px #bfccd6, inset -3px -3px #bfccd6;` : null}\n`;\n\nfunction ActionBar({top, bottom}: {top: React.ReactNode; bottom?: React.ReactNode}) {\n  return (\n    <Box flex={{direction: 'column'}} padding={{vertical: 12}}>\n      <Box flex={{alignItems: 'center', gap: 12}} padding={{left: 24, right: 12}}>\n        {top}\n      </Box>\n      {bottom ? (\n        <Box\n          margin={{top: 12}}\n          padding={{left: 24, right: 12, top: 8}}\n          border=\"top\"\n          flex={{gap: 8, wrap: 'wrap'}}\n        >\n          {bottom}\n        </Box>\n      ) : null}\n    </Box>\n  );\n}\n\nconst RunTagsWrapper = styled.div`\n  display: contents;\n  > * {\n    display: contents;\n  }\n`;\n\nfunction isUnpinnedByDefaultSystemTag(key: string) {\n  return (\n    (key.startsWith(DagsterTag.Namespace) &&\n      key !== DagsterTag.Partition &&\n      key !== DagsterTag.Backfill) ||\n    key === 'mode'\n  );\n}\n\nfunction toggleTag(tagsArr: string[] | undefined, tagKey: string): string[] {\n  const tags = tagsArr || [];\n  if (tags.indexOf(tagKey) !== -1) {\n    return tags.filter((key) => key !== tagKey);\n  } else {\n    return [...tags, tagKey];\n  }\n}\n\nfunction TargetHeader() {\n  const [hideTabPinningNux, setHideTabPinningNux] = useStateWithStorage<any>(\n    'RunTableTabPinningNux',\n    (value) => value,\n  );\n  if (hideTabPinningNux) {\n    return <div>Target</div>;\n  }\n  return (\n    <ProductTour\n      title=\"Hide and show run tags\"\n      description={\n        <>\n          You can show tags that you prefer quick access to and hide tags you don&apos;t by hovering\n          over the tag and selecting the show/hide tag option.\n        </>\n      }\n      position={ProductTourPosition.BOTTOM_RIGHT}\n      video={ShowAndHideTagsMP4}\n      width=\"616px\"\n      actions={{\n        dismiss: () => {\n          setHideTabPinningNux('1');\n        },\n      }}\n    >\n      <div>Target</div>\n    </ProductTour>\n  );\n}\n","import {Box} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {showSharedToaster} from '../app/DomUtils';\nimport {useCopyToClipboard} from '../app/browser';\nimport {__ASSET_JOB_PREFIX} from '../asset-graph/Utils';\nimport {TagAction} from '../ui/TagActions';\n\nimport {DagsterTag, RunTag, TagType} from './RunTag';\nimport {RunFilterToken} from './RunsFilterInput';\n\n// Sort these tags to the start of the list.\nconst priorityTags = ['mode', DagsterTag.Backfill as string, DagsterTag.Partition as string];\nconst priorityTagsSet = new Set(priorityTags);\n\nconst renamedTags = {\n  [DagsterTag.SolidSelection]: DagsterTag.OpSelection,\n};\n\nconst canAddTagToFilter = (key: string) => {\n  return key !== DagsterTag.SolidSelection && key !== DagsterTag.OpSelection && key !== 'mode';\n};\n\nexport const RunTags: React.FC<{\n  tags: TagType[];\n  mode?: string | null;\n  onAddTag?: (token: RunFilterToken) => void;\n  onToggleTagPin?: (key: string) => void;\n}> = React.memo(({tags, onAddTag, onToggleTagPin, mode}) => {\n  const copy = useCopyToClipboard();\n\n  const copyAction = React.useMemo(\n    () => ({\n      label: 'Copy tag',\n      onClick: async (tag: TagType) => {\n        copy(`${tag.key}:${tag.value}`);\n        await showSharedToaster({intent: 'success', message: 'Copied tag!'});\n      },\n    }),\n    [copy],\n  );\n\n  const addToFilterAction = React.useMemo(\n    () =>\n      onAddTag\n        ? {\n            label: 'Add tag to filter',\n            onClick: (tag: TagType) => {\n              onAddTag({token: 'tag', value: `${tag.originalKey || tag.key}=${tag.value}`});\n            },\n          }\n        : null,\n    [onAddTag],\n  );\n\n  const actionsForTag = (tag: TagType) => {\n    const list: TagAction[] = [copyAction];\n    if (addToFilterAction && canAddTagToFilter(tag.key)) {\n      list.push(addToFilterAction);\n    }\n    if (onToggleTagPin) {\n      list.push({\n        label: tag.pinned ? 'Hide tag' : 'Show tag in table',\n        onClick: () => {\n          onToggleTagPin(tag.originalKey || tag.key);\n        },\n      });\n    }\n    return list.filter((item) => !!item);\n  };\n\n  const displayedTags = React.useMemo(() => {\n    const priority = [];\n    const others = [];\n    const copiedTags: TagType[] = tags.map(({key, value, pinned, link}) => ({\n      key,\n      value,\n      pinned,\n      link,\n    }));\n    for (const tag of copiedTags) {\n      const {key} = tag;\n      if (renamedTags.hasOwnProperty(key)) {\n        tag.key = renamedTags[key as keyof typeof renamedTags];\n        tag.originalKey = key;\n      }\n\n      if (\n        tag.value.startsWith(__ASSET_JOB_PREFIX) &&\n        (key === DagsterTag.PartitionSet || key === DagsterTag.StepSelection)\n      ) {\n        continue;\n      } else if (priorityTagsSet.has(key)) {\n        priority.push(tag);\n      } else {\n        others.push(tag);\n      }\n    }\n    return [\n      ...priority.sort((a, b) => {\n        const aIndex = priorityTags.indexOf(a.key);\n        const bIndex = priorityTags.indexOf(b.key);\n        return aIndex - bIndex;\n      }),\n      ...others,\n    ];\n  }, [tags]);\n\n  if (!tags.length) {\n    return null;\n  }\n\n  const modeTag = mode ? (\n    <RunTag tag={{key: 'mode', value: mode}} actions={actionsForTag({key: 'mode', value: mode})} />\n  ) : null;\n  return (\n    <Box flex={{direction: 'row', wrap: 'wrap', gap: 4}}>\n      {modeTag}\n      {displayedTags.map((tag) => (\n        <RunTag tag={tag} key={tag.key} actions={actionsForTag(tag)} />\n      ))}\n    </Box>\n  );\n});\n","// eslint-disable-next-line no-restricted-imports\nimport {AnchorButton as BlueprintAnchorButton} from '@blueprintjs/core';\nimport {\n  intentToFillColor,\n  intentToStrokeColor,\n  intentToTextColor,\n  StyledButton,\n  StyledButtonText,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link, LinkProps} from 'react-router-dom';\n\ntype AnchorButtonProps = Omit<\n  React.ComponentProps<typeof BlueprintAnchorButton>,\n  'loading' | 'onClick' | 'onFocus' | 'type'\n> &\n  LinkProps & {\n    label?: React.ReactNode;\n  };\n\nexport const AnchorButton = React.forwardRef(\n  (props: AnchorButtonProps, ref: React.ForwardedRef<HTMLAnchorElement>) => {\n    const {children, icon, intent, outlined, rightIcon, ...rest} = props;\n    return (\n      <StyledButton\n        {...rest}\n        as={Link}\n        $fillColor={intentToFillColor(intent, outlined)}\n        $strokeColor={intentToStrokeColor(intent, outlined)}\n        $textColor={intentToTextColor(intent, outlined)}\n        ref={ref}\n      >\n        {icon || null}\n        {children ? <StyledButtonText>{children}</StyledButtonText> : null}\n        {rightIcon || null}\n      </StyledButton>\n    );\n  },\n);\n\nAnchorButton.displayName = 'AnchorButton';\n","// eslint-disable-next-line no-restricted-imports\nimport {\n  Box,\n  Colors,\n  CommonMenuItemProps,\n  IconWrapper,\n  iconWithColor,\n  MenuItem,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link, LinkProps} from 'react-router-dom';\nimport styled from 'styled-components';\n\ninterface MenuLinkProps\n  extends CommonMenuItemProps,\n    Omit<React.ComponentProps<typeof MenuItem>, 'icon' | 'onClick' | 'onFocus' | 'target'>,\n    LinkProps {}\n\n/**\n * If you want to use a menu item as a link, use `MenuLink` and provide a `to` prop.\n */\nexport const MenuLink: React.FC<MenuLinkProps> = (props) => {\n  const {icon, intent, text, disabled, ...rest} = props;\n\n  if (disabled) {\n    return <MenuItem disabled icon={icon} intent={intent} text={text} />;\n  }\n  return (\n    <StyledMenuLink {...rest}>\n      <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n        {iconWithColor(icon, intent)}\n        <div>{text}</div>\n      </Box>\n    </StyledMenuLink>\n  );\n};\n\nconst StyledMenuLink = styled(Link)`\n  text-decoration: none;\n\n  border-radius: 4px;\n  display: block;\n  line-height: 20px;\n  padding: 6px 8px 6px 12px;\n  transition:\n    background-color 50ms,\n    box-shadow 150ms;\n  align-items: flex-start;\n  user-select: none;\n\n  /**\n   * Use margin instead of align-items: center because the contents of the menu item may wrap \n   * in unusual circumstances.\n   */\n  ${IconWrapper} {\n    margin-top: 2px;\n  }\n\n  ${IconWrapper}:first-child {\n    margin-left: -4px;\n  }\n\n  &&&:link,\n  &&&:visited,\n  &&&:hover,\n  &&&:active {\n    color: ${Colors.Gray900};\n    text-decoration: none;\n  }\n\n  &&&:hover {\n    background: ${Colors.Gray100};\n  }\n`;\n"],"names":["Page","styled","div","withConfig","PageHeader","props","title","tags","right","tabs","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsxs","PageHeaderContainer","background","Colors","Gray50","padding","top","left","border","Box","flex","direction","justifyContent","bottom","alignItems","gap","wrap","__GLOBAL__","globalAssetGraphPathToString","path","str","explorerPathToString","_swc_helpers_object_spread_props__WEBPACK_IMPORTED_MODULE_2__","_","_swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_3__","pipelineName","replace","concat","globalAssetGraphPathFromString","pathName","explorerPathFromString","globalAssetGraphPathForAssetsAndDescendants","assetKeys","opsQuery","map","a","tokenForAssetKey","join","opNames","length","URL_MAX_LENGTH","reducer","state","action","copy","Set","Array","from","checkedIds","type","payload","checked","id","add","delete","lastCheckedId","allIds","indexOfLast","indexOf","indexOfChecked","_sort","_swc_helpers_sliced_to_array__WEBPACK_IMPORTED_MODULE_1__","sort","start","end","slice","forEach","initialState","useSelectionReducer","React","dispatch","onToggleFactory","values","shiftKey","onToggleAll","renderItemAssetKey","assetKey","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Link","to","assetDetailsPathForKey","style","display","width","MiddleTruncate","text","displayNameForAssetKey","renderItemAssetCheck","assetCheck","assetDetailsPathForAssetCheck","labelForAssetCheck","check","name","useShowMoreDialog","dialogTitle","items","renderItem","showMore","setShowMore","dialog","Dialog","onClose","minWidth","maxWidth","maxHeight","isOpen","height","overflow","VirtualizedItemListForDialog","DialogFooter","topBorder","Button","intent","autoFocus","onClick","undefined","AssetKeyTagCollection","param","useTags","_param_dialogTitle","span","marginBottom","TagActionsPopover","data","key","value","actions","label","view","lineageScope","Tag","interactive","icon","Icon","color","Gray400","size","ButtonLink","AssetCheckTagCollection","assetChecks","CreatedByTagCell","repoAddress","onAddTag","CreatedByTag","pluckTagFromList","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","tag","DagsterTag","User","ScheduleName","SensorName","Automaterialize","CreatedBy","AutoObserve","err","return","UserDisplay","useLaunchPadHooks","plucked","tagElement","buildTagElement","email","workspacePathFromAddress","token","refineToError","deletePipelineRun","__typename","initializeState","frozenRuns","step","deletion","completed","errors","deletionDialogReducer","prevState","_swc_helpers_object_spread_props__WEBPACK_IMPORTED_MODULE_4__","_swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_5__","deletion1","_swc_helpers_define_property__WEBPACK_IMPORTED_MODULE_6__","error","DeletionDialog","onComplete","onTerminateInstead","selectedRuns","current","runIDs","Object","keys","count","terminatableCount","filter","destroy","useMutation","DELETE_MUTATION","mutate","_swc_helpers_async_to_generator__WEBPACK_IMPORTED_MODULE_9__","runList","runId","variables","_state","sent","canQuicklyClose","canEscapeKeyClose","canOutsideClickClose","DialogBody","Group","spacing","progressContent","Fragment","strong","ProgressBar","Math","max","animate","NavigationBlock","message","completionContent","errorCount","successCount","Green500","Yellow500","ul","li","Mono","buttons","disabled","ProductTourPosition","ProductTour","description","position","children","img","video","object","media","jsx_runtime","src","borderRadius","autoPlay","loop","muted","actionsJsx","ActionsContainer","margin","dismiss","Popover","placement","modifiers","arrow","enabled","preventOverflow","minimal","content","ProductTourContainer","_param_width","Subheading","fontSize","Gray900","White","launchPipelineReexecution","errorText","reexecution","reexecutionDialogReducer","_object_spread_props","_object_spread","reexecution1","_define_property","ReexecutionDialog","reexecutionStrategy","reexecute","LAUNCH_PIPELINE_REEXECUTION_MUTATION","_async_to_generator","reexecutionParams","parentRunId","strategy","ReexecutionStrategy","ALL_STEPS","RunActionsMenu","run","additionalActionsForRun","refetch","RunsQueryRefetchContext","visibleDialog","setVisibleDialog","rootServerURI","AppContext","copyConfig","useCopyToClipboard","useJobReexecution","onCompleted","useLazyQuery","PIPELINE_ENVIRONMENT_QUERY","loadEnv","called","loading","closeDialogs","pipelineRun","pipelineRunOrError","runConfigYaml","repoMatch","useRepositoryForRunWithParentSnapshot","jobError","useJobAvailabilityErrorForRun","parentPipelineSnapshotId","isFinished","doneStatuses","has","status","isJob","isThisThingAJob","match","infoReady","reexecutionDisabledState","hasReExecutePermission","tooltip","DEFAULT_DISABLED_REASON","JoinedButtons","AnchorButton","Menu","MenuItem","tagName","horizontal","SlashShortcut","pipelineSnapshotId","LinkNoUnderline","getPipelineSnapshotLink","MenuDivider","Tooltip","OPEN_LAUNCHPAD_UNKNOWN","NO_LAUNCH_PERMISSION_MESSAGE","targetTagName","MenuLink","workspacePathFromRunDetails","repositoryName","repository","repositoryLocationName","repositoryLocation","canShow","hasTerminatePermission","MenuExternalLink","download","href","hasDeletePermission","onOpening","TerminationDialog","canTerminate","RunTags","mode","StyledRawCodeMirror","options","readOnly","lineNumbers","showSharedToaster","RunBulkActionsMenu","selected","clearSelection","canTerminateAny","some","canDeleteAny","canReexecuteAny","terminatableRuns","r","terminateableIDs","terminateableMap","reduce","accum","deleteableIDs","deletionMap","reexecuteFromFailureRuns","failedStatuses","reexecuteFromFailureMap","reexecutableRuns","reexecutableMap","rightIcon","FROM_FAILURE","gql","Gray100","Gray500","RunTable","runs","highlightedIds","actionBarComponents","belowActionBarComponents","hideCreatedBy","emptyState","canTerminateOrDeleteAny","selectedFragments","ActionBar","grow","Table","thead","tr","th","paddingTop","paddingBottom","Checkbox","indeterminate","onChange","e","target","HTMLInputElement","TargetHeader","additionalColumnHeaders","tbody","RunRow","canTerminateOrDelete","additionalColumns","additionalColumnsForRow","onToggleChecked","isHighlighted","includes","anyFilter","vertical","NonIdealState","RUN_TAGS_FRAGMENT","RUN_TABLE_RUN_FRAGMENT","RUN_TIME_FRAGMENT","repo","useRepositoryForRunWithoutSnapshot","pipelinesAndJobs","pipelines","find","pipelineOrJob","repoAddressGuess","buildRepoAddress","useStateWithStorage","isArray","pinnedSystemTags","setPinnedSystemTags","unpinnedTags","setUnpinnedTags","allTagsWithPinned","allTags","_to_consumable_array","push","pinned","isUnpinnedByDefaultSystemTag","isReexecution","ParentRunId","targetBackfill","Backfill","showRunTags","setShowRunTags","isHovered","setIsHovered","tagsToShow","tagKeys","link","assetSelection","runsPathWithFilters","onToggleTagPin","tagKey","toggleTag","Row","highlighted","onMouseEnter","onMouseLeave","td","nativeEvent","MouseEvent","getModifierState","titleForRun","RunTime","isHiddenAssetGroupJob","assetKeysForRun","assetCheckSelection","PipelineReference","showIcon","pipelineHrefContext","workspacePipelinePath","repoName","repoLocation","workspacePipelinePathGuessRepo","Blue500","RunTagsWrapper","Caption","Gray700","ShortcutHandler","onShortcut","shortcutLabel","shortcutFilter","code","RunStatusTagWithStats","RunStateSummary","startsWith","Namespace","Partition","tagsArr","hideTabPinningNux","setHideTabPinningNux","BOTTOM_RIGHT","priorityTags","priorityTagsSet","renamedTags","SolidSelection","OpSelection","copyAction","_swc_helpers_async_to_generator__WEBPACK_IMPORTED_MODULE_7__","addToFilterAction","originalKey","actionsForTag","list","item","displayedTags","priority","others","copiedTags","hasOwnProperty","__ASSET_JOB_PREFIX","PartitionSet","StepSelection","_swc_helpers_to_consumable_array__WEBPACK_IMPORTED_MODULE_9__","b","aIndex","modeTag","RunTag","ref","outlined","rest","StyledButton","as","$fillColor","intentToFillColor","$strokeColor","intentToStrokeColor","$textColor","intentToTextColor","StyledButtonText","displayName","StyledMenuLink","iconWithColor","IconWrapper"],"sourceRoot":""}