{"version":3,"file":"static/chunks/948.2caba091ca647c64.js","mappings":"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","sources":["webpack://_N_E/../../node_modules/lodash/memoize.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_array_with_holes.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_non_iterable_rest.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_array_like_to_array.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_sliced_to_array.js","webpack://_N_E/../ui-core/src/asset-graph/layout.ts","webpack://_N_E/../../node_modules/@swc/helpers/esm/_array_without_holes.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_iterable_to_array.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_non_iterable_spread.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_to_consumable_array.js","webpack://_N_E/../ui-core/src/app/titleOfIO.ts","webpack://_N_E/../ui-core/src/graph/layout.ts","webpack://_N_E/../ui-core/src/workers/dagre_layout.worker.ts","webpack://_N_E/<anon>"],"sourcesContent":["var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","export function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","export function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","export function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","import { _array_with_holes } from \"./_array_with_holes.js\";\nimport { _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","import * as dagre from 'dagre';\nimport groupBy from 'lodash/groupBy';\n\nimport {IBounds, IPoint} from '../graph/common';\n\nimport {GraphData, GraphNode, GraphId} from './Utils';\n\nexport interface AssetLayout {\n  id: GraphId;\n  bounds: IBounds; // Overall frame of the box relative to 0,0 on the graph\n}\n\nexport interface GroupLayout {\n  id: GraphId;\n  groupName: string;\n  repositoryName: string;\n  repositoryLocationName: string;\n  repositoryDisambiguationRequired: boolean;\n  bounds: IBounds; // Overall frame of the box relative to 0,0 on the graph\n}\nexport type AssetLayoutEdge = {\n  from: IPoint;\n  fromId: string;\n  to: IPoint;\n  toId: string;\n};\n\nexport type AssetGraphLayout = {\n  width: number;\n  height: number;\n  edges: AssetLayoutEdge[];\n  nodes: {[id: string]: AssetLayout};\n  groups: {[name: string]: GroupLayout};\n};\n\n// Prefix group nodes in the Dagre layout so that an asset and an asset\n// group cannot have the same name.\nconst GROUP_NODE_PREFIX = 'group__';\n\nconst MARGIN = 100;\n\nexport type LayoutAssetGraphOptions = {\n  horizontalDAGs: boolean;\n  tightTree: boolean;\n  longestPath: boolean;\n};\n\nexport const layoutAssetGraph = (\n  graphData: GraphData,\n  opts: LayoutAssetGraphOptions,\n): AssetGraphLayout => {\n  const g = new dagre.graphlib.Graph({compound: true});\n\n  const ranker = opts.tightTree\n    ? 'tight-tree'\n    : opts.longestPath\n    ? 'longest-path'\n    : 'network-simplex';\n\n  g.setGraph(\n    opts.horizontalDAGs\n      ? {\n          rankdir: 'LR',\n          marginx: MARGIN,\n          marginy: MARGIN,\n          nodesep: -10,\n          edgesep: 90,\n          ranksep: 60,\n          ranker,\n        }\n      : {\n          rankdir: 'TB',\n          marginx: MARGIN,\n          marginy: MARGIN,\n          nodesep: 40,\n          edgesep: 10,\n          ranksep: 10,\n          ranker,\n        },\n  );\n  g.setDefaultEdgeLabel(() => ({}));\n\n  const parentNodeIdForNode = (node: GraphNode) =>\n    [\n      GROUP_NODE_PREFIX,\n      node.definition.repository.location.name,\n      node.definition.repository.name,\n      node.definition.groupName,\n    ].join('__');\n\n  // const shouldRender = (node?: GraphNode) => node && node.definition.opNames.length > 0;\n  const shouldRender = (node?: GraphNode) => node;\n  const renderedNodes = Object.values(graphData.nodes).filter(shouldRender);\n\n  const groups: {[id: string]: GroupLayout} = {};\n  for (const node of renderedNodes) {\n    if (node.definition.groupName) {\n      const id = parentNodeIdForNode(node);\n      groups[id] = {\n        id,\n        groupName: node.definition.groupName,\n        repositoryName: node.definition.repository.name,\n        repositoryLocationName: node.definition.repository.location.name,\n        repositoryDisambiguationRequired: false,\n        bounds: {x: 0, y: 0, width: 0, height: 0},\n      };\n    }\n  }\n\n  // Add all the group boxes to the graph\n  const showGroups = Object.keys(groups).length > 1;\n  if (showGroups) {\n    Object.keys(groups).forEach((groupId) => g.setNode(groupId, {}));\n  }\n\n  // Add all the nodes to the graph\n  renderedNodes.forEach((node) => {\n    g.setNode(node.id, getAssetNodeDimensions(node.definition));\n    if (showGroups && node.definition.groupName) {\n      g.setParent(node.id, parentNodeIdForNode(node));\n    }\n  });\n\n  const linksToAssetsOutsideGraphedSet: {[id: string]: true} = {};\n\n  // Add the edges to the graph, and accumulate a set of \"foreign nodes\" (for which\n  // we have an inbound/outbound edge, but we don't have the `node` in the graphData).\n  Object.entries(graphData.downstream).forEach(([upstreamId, graphDataDownstream]) => {\n    const downstreamIds = Object.keys(graphDataDownstream);\n    downstreamIds.forEach((downstreamId) => {\n      if (\n        !shouldRender(graphData.nodes[downstreamId]) &&\n        !shouldRender(graphData.nodes[upstreamId])\n      ) {\n        return;\n      }\n\n      g.setEdge({v: upstreamId, w: downstreamId}, {weight: 1});\n\n      if (!shouldRender(graphData.nodes[downstreamId])) {\n        (linksToAssetsOutsideGraphedSet as any)[downstreamId] = true;\n      } else if (!shouldRender(graphData.nodes[upstreamId])) {\n        (linksToAssetsOutsideGraphedSet as any)[upstreamId] = true;\n      }\n    });\n  });\n\n  // Add all the link nodes to the graph\n  Object.keys(linksToAssetsOutsideGraphedSet).forEach((id) => {\n    const path = JSON.parse(id);\n    const label = path[path.length - 1] || '';\n    g.setNode(id, getAssetLinkDimensions(label, opts));\n  });\n\n  dagre.layout(g);\n\n  let maxWidth = 0;\n  let maxHeight = 0;\n\n  const nodes: {[id: string]: AssetLayout} = {};\n\n  g.nodes().forEach((id) => {\n    const dagreNode = g.node(id);\n    if (!dagreNode) {\n      return;\n    }\n    const bounds = {\n      x: dagreNode.x - dagreNode.width / 2,\n      y: dagreNode.y - dagreNode.height / 2,\n      width: dagreNode.width,\n      height: dagreNode.height,\n    };\n    if (!id.startsWith(GROUP_NODE_PREFIX)) {\n      nodes[id] = {id, bounds};\n    }\n\n    maxWidth = Math.max(maxWidth, dagreNode.x + dagreNode.width / 2);\n    maxHeight = Math.max(maxHeight, dagreNode.y + dagreNode.height / 2);\n  });\n\n  // Apply bounds to the groups based on the nodes inside them\n  if (showGroups) {\n    for (const node of renderedNodes) {\n      if (node.definition.groupName) {\n        const groupId = parentNodeIdForNode(node);\n        const groupForId = groups[groupId]!;\n        groupForId.bounds =\n          groupForId.bounds.width === 0\n            ? nodes[node.id]!.bounds\n            : extendBounds(groupForId.bounds, nodes[node.id]!.bounds);\n      }\n    }\n    for (const group of Object.values(groups)) {\n      group.bounds = padBounds(group.bounds, {x: 15, top: 70, bottom: -10});\n    }\n  }\n\n  // Annotate groups that require disambiguation (same group name appears twice)\n  Object.values(groupBy(Object.values(groups), (g) => g.groupName))\n    .filter((set) => set.length > 1)\n    .flat()\n    .forEach((group) => {\n      group.bounds.y -= 18;\n      group.bounds.height += 18;\n      group.repositoryDisambiguationRequired = true;\n    });\n\n  const edges: AssetLayoutEdge[] = [];\n\n  g.edges().forEach((e) => {\n    const v = g.node(e.v);\n    const vXInset = !!linksToAssetsOutsideGraphedSet[e.v] ? 16 : 24;\n    const w = g.node(e.w);\n    const wXInset = !!linksToAssetsOutsideGraphedSet[e.w] ? 16 : 24;\n\n    // Ignore the coordinates from dagre and use the top left + bottom left of the\n    edges.push(\n      opts.horizontalDAGs\n        ? {\n            from: {x: v.x + v.width / 2, y: v.y},\n            fromId: e.v,\n            to: {x: w.x - w.width / 2 - 5, y: w.y},\n            toId: e.w,\n          }\n        : {\n            from: {x: v.x - v.width / 2 + vXInset, y: v.y - 30 + v.height / 2},\n            fromId: e.v,\n            to: {x: w.x - w.width / 2 + wXInset, y: w.y + 20 - w.height / 2},\n            toId: e.w,\n          },\n    );\n  });\n\n  return {\n    nodes,\n    edges,\n    width: maxWidth + MARGIN,\n    height: maxHeight + MARGIN,\n    groups: showGroups ? groups : {},\n  };\n};\n\nexport const ASSET_LINK_NAME_MAX_LENGTH = 10;\n\nexport const getAssetLinkDimensions = (label: string, opts: LayoutAssetGraphOptions) => {\n  return opts.horizontalDAGs\n    ? {width: 32 + 8 * Math.min(ASSET_LINK_NAME_MAX_LENGTH, label.length), height: 90}\n    : {width: 106, height: 90};\n};\n\nexport const padBounds = (a: IBounds, padding: {x: number; top: number; bottom: number}) => {\n  return {\n    x: a.x - padding.x,\n    y: a.y - padding.top,\n    width: a.width + padding.x * 2,\n    height: a.height + padding.top + padding.bottom,\n  };\n};\n\nexport const extendBounds = (a: IBounds, b: IBounds) => {\n  const xmin = Math.min(a.x, b.x);\n  const ymin = Math.min(a.y, b.y);\n  const xmax = Math.max(a.x + a.width, b.x + b.width);\n  const ymax = Math.max(a.y + a.height, b.y + b.height);\n  return {x: xmin, y: ymin, width: xmax - xmin, height: ymax - ymin};\n};\n\nexport const ASSET_NODE_NAME_MAX_LENGTH = 28;\n\nexport const getAssetNodeDimensions = (def: {\n  assetKey: {path: string[]};\n  opNames: string[];\n  isSource: boolean;\n  isObservable: boolean;\n  isPartitioned: boolean;\n  graphName: string | null;\n  description?: string | null;\n  computeKind: string | null;\n}) => {\n  const width = 265;\n\n  if (def.isSource && !def.isObservable) {\n    return {width, height: 102};\n  } else {\n    let height = 100; // top tags area + name + description\n\n    if (def.isSource) {\n      height += 30; // last observed\n    } else {\n      height += 26; // status row\n      if (def.isPartitioned) {\n        height += 40;\n      }\n    }\n\n    height += 30; // tags beneath\n\n    return {width, height};\n  }\n};\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","export const DEFAULT_RESULT_NAME = 'result';\n\nexport const titleOfIO = (i: {solid: {name: string}; definition: {name: string}}) => {\n  return i.solid.name !== DEFAULT_RESULT_NAME\n    ? `${i.solid.name}:${i.definition.name}`\n    : i.solid.name;\n};\n","import * as dagre from 'dagre';\n\nimport {titleOfIO} from '../app/titleOfIO';\n\nimport {IBounds, IPoint} from './common';\n\nexport type OpLayoutEdgeSide = {\n  point: IPoint;\n  opName: string;\n  edgeName: string;\n};\n\nexport type OpLayoutEdge = {\n  from: OpLayoutEdgeSide;\n  to: OpLayoutEdgeSide;\n};\n\nexport interface OpLayout {\n  // Overall frame of the box relative to 0,0 on the graph\n  bounds: IBounds;\n\n  // Frames of specific components - These need to be computed during layout\n  // (rather than at render time) to position edges into inputs/outputs.\n  op: IBounds;\n  inputs: {[inputName: string]: OpLayoutIO};\n  outputs: {[outputName: string]: OpLayoutIO};\n}\n\nexport interface OpLayoutIO {\n  layout: IBounds;\n  label: boolean;\n  collapsed: string[];\n  port: IPoint;\n}\n\nexport type OpGraphLayout = {\n  width: number;\n  height: number;\n  parent: ParentOpLayout | null;\n  edges: OpLayoutEdge[];\n  nodes: {[opName: string]: OpLayout};\n};\n\ninterface ParentOpLayout extends Omit<OpLayout, 'op'> {\n  mappingLeftEdge: number;\n  mappingLeftSpacing: number;\n  dependsOn: {[opName: string]: IPoint};\n  dependedBy: {[opName: string]: IPoint};\n  invocationBoundingBox: IBounds;\n}\n\nexport interface ILayoutOp {\n  name: string;\n  inputs: {\n    definition: {\n      name: string;\n    };\n    dependsOn: {\n      definition: {\n        name: string;\n      };\n      solid: {\n        name: string;\n      };\n    }[];\n  }[];\n  definition: {\n    description: string | null;\n    assetNodes: {\n      assetKey: {\n        path: string[];\n      };\n    }[];\n  };\n  outputs: {\n    definition: {\n      name: string;\n    };\n    dependedBy: {\n      definition: {\n        name: string;\n      };\n      solid: {\n        name: string;\n      };\n    }[];\n  }[];\n}\n\nconst OP_WIDTH = 370;\nconst OP_BASE_HEIGHT = 52;\nconst OP_ASSETS_ROW_HEIGHT = 22;\nconst IO_HEIGHT = 26;\nconst IO_INSET = 0;\nconst IO_MINI_WIDTH = 35;\nconst IO_THRESHOLD_FOR_MINI = 4;\nconst PORT_INSET_X = 13;\nconst PORT_INSET_Y = IO_HEIGHT / 2;\nconst PARENT_DEFINITION_PADDING = 70;\nconst PARENT_INVOCATION_PADDING = 70;\nconst EXTERNAL_DEPENDENCY_PADDING = 50;\n\nconst MARGIN_BASE = 100;\n\ntype OpLinkInfo = {\n  solid: {name: string};\n  definition: {name: string};\n};\n\nfunction flattenIO(arrays: OpLinkInfo[][]) {\n  const map: {[key: string]: OpLinkInfo} = {};\n  arrays.forEach((array) => array.forEach((item) => (map[titleOfIO(item)] = item)));\n  return Object.values(map);\n}\n\nexport type LayoutOpGraphOptions = {\n  parentOp?: ILayoutOp;\n};\n\nexport function layoutOpGraph(pipelineOps: ILayoutOp[], opts: LayoutOpGraphOptions): OpGraphLayout {\n  const g = new dagre.graphlib.Graph();\n\n  // First, identify how much space we need to pad the DAG by in order to show the\n  // parent op AROUND it. We pass this padding in to dagre, and then we have enough\n  // room to add our parent layout around the result.\n  let parentIOPadding = 0;\n  let marginy = MARGIN_BASE;\n  let marginx = MARGIN_BASE;\n  if (opts.parentOp) {\n    parentIOPadding =\n      Math.max(opts.parentOp.inputs.length, opts.parentOp.outputs.length) * IO_HEIGHT;\n    marginx = PARENT_DEFINITION_PADDING + PARENT_INVOCATION_PADDING;\n    marginy = marginx + parentIOPadding;\n  }\n\n  // Define a new top-down, left to right graph layout\n  g.setGraph({rankdir: 'TB', marginx, marginy});\n  g.setDefaultEdgeLabel(() => ({}));\n\n  const edges: OpLayoutEdge[] = [];\n  const opNamesPresent: {[name: string]: boolean} = {};\n\n  pipelineOps.forEach((op) => {\n    opNamesPresent[op.name] = true;\n  });\n  pipelineOps.forEach((op) => {\n    // Lay out each op individually to get it's width and height based on it's\n    // inputs and outputs, and then attach it to the graph. Dagre will give us it's\n    // x,y position.\n    const layout = layoutOp(op, {x: 0, y: 0});\n    g.setNode(op.name, {\n      width: layout.bounds.width,\n      height: layout.bounds.height,\n    });\n\n    // Give Dagre the dependency edges and build a flat set of them so we\n    // can reference them in a single pass later\n    op.inputs.forEach((input) => {\n      input.dependsOn.forEach((dep) => {\n        if (opNamesPresent[dep.solid.name] && opNamesPresent[op.name]) {\n          g.setEdge({v: dep.solid.name, w: op.name}, {weight: 1});\n\n          edges.push({\n            from: {\n              point: {x: 0, y: 0},\n              opName: dep.solid.name,\n              edgeName: dep.definition.name,\n            },\n            to: {\n              point: {x: 0, y: 0},\n              opName: op.name,\n              edgeName: input.definition.name,\n            },\n          });\n        }\n      });\n    });\n  });\n\n  dagre.layout(g);\n\n  const ops: {[opName: string]: OpLayout} = {};\n  const dagreNodes: {[opName: string]: dagre.Node} = {};\n  g.nodes().forEach(function (opName) {\n    const node = g.node(opName);\n    if (!node) {\n      return;\n    }\n    dagreNodes[opName] = node;\n  });\n\n  // Due to a bug in Dagre when run without an \"align\" value, we need to calculate\n  // the total width of the graph coordinate space ourselves. We need the height\n  // because we've shifted long single rows into multiple rows.\n  let maxWidth = 0;\n  let maxHeight = 0;\n\n  // Read the Dagre layout and map \"nodes\" back to our solids, but with\n  // X,Y coordinates this time.\n  Object.entries(dagreNodes).forEach(([opName, node]) => {\n    const op = pipelineOps.find(({name}) => name === opName);\n    if (!op) {\n      return;\n    }\n\n    const x = node.x - node.width / 2; // Dagre's x/y is the center, we want top left\n    const y = node.y - node.height / 2;\n    ops[opName] = layoutOp(op, {x, y});\n    maxWidth = Math.max(maxWidth, x + node.width);\n    maxHeight = Math.max(maxHeight, y + node.height);\n  });\n\n  // Read the Dagre layout and map \"edges\" back to our data model. We don't\n  // currently use the \"closest points on the node\" Dagre suggests (but we could).\n  g.edges().forEach(function (e) {\n    const conn = edges.find((c) => c.from.opName === e.v && c.to.opName === e.w);\n    const points = g.edge(e).points;\n    if (conn && points.length > 0) {\n      conn.from.point = points[0]!;\n      conn.to.point = points[points.length - 1]!;\n    }\n  });\n\n  const result: OpGraphLayout = {\n    edges,\n    nodes: ops,\n    width: maxWidth + marginx,\n    height: maxHeight + marginy,\n    parent: null,\n  };\n\n  if (opts.parentOp) {\n    // Now that we've computed the pipeline layout fully, lay out the\n    // composite op around the completed DAG.\n    result.parent = layoutParentGraphOp(result, opts.parentOp, parentIOPadding);\n  }\n\n  return result;\n}\n\nfunction layoutParentGraphOp(layout: OpGraphLayout, op: ILayoutOp, parentIOPadding: number) {\n  const result: ParentOpLayout = {\n    invocationBoundingBox: {\n      x: 1,\n      y: 1,\n      width: layout.width - 1,\n      height: layout.height - 1,\n    },\n    bounds: {\n      x: PARENT_INVOCATION_PADDING,\n      y: PARENT_INVOCATION_PADDING + parentIOPadding,\n      width: layout.width - PARENT_INVOCATION_PADDING * 2,\n      height: layout.height - (PARENT_INVOCATION_PADDING + parentIOPadding) * 2,\n    },\n    mappingLeftEdge: PARENT_INVOCATION_PADDING - 20,\n    mappingLeftSpacing: 10,\n    inputs: {},\n    outputs: {},\n    dependsOn: layoutExternalConnections(\n      flattenIO(op.inputs.map((d) => d.dependsOn)),\n      -EXTERNAL_DEPENDENCY_PADDING,\n      layout.width,\n    ),\n    dependedBy: layoutExternalConnections(\n      flattenIO(op.outputs.map((d) => d.dependedBy)),\n      layout.height + EXTERNAL_DEPENDENCY_PADDING,\n      layout.width,\n    ),\n  };\n\n  const boundingBottom = result.bounds.y + result.bounds.height;\n\n  op.inputs.forEach((input, idx) => {\n    result.inputs[input.definition.name] = {\n      layout: {\n        x: result.bounds.x,\n        y: result.bounds.y - idx * IO_HEIGHT - IO_HEIGHT,\n        width: 0,\n        height: IO_HEIGHT,\n      },\n      collapsed: [],\n      label: true,\n      port: {\n        x: result.bounds.x + PORT_INSET_X,\n        y: result.bounds.y - idx * IO_HEIGHT - IO_HEIGHT / 2,\n      },\n    };\n  });\n\n  op.outputs.forEach((output, idx) => {\n    result.outputs[output.definition.name] = {\n      layout: {\n        x: result.bounds.x,\n        y: boundingBottom + idx * IO_HEIGHT,\n        width: 0,\n        height: IO_HEIGHT,\n      },\n      collapsed: [],\n      label: true,\n      port: {\n        x: result.bounds.x + PORT_INSET_X,\n        y: boundingBottom + idx * IO_HEIGHT + IO_HEIGHT / 2,\n      },\n    };\n  });\n\n  return result;\n}\n\nfunction layoutExternalConnections(links: OpLinkInfo[], y: number, layoutWidth: number) {\n  // fill evenly from 0 to layoutWidth from left to right, then center them if there's overflow.\n  const inset = PARENT_INVOCATION_PADDING + PORT_INSET_X;\n  const insetWidth = layoutWidth - inset * 2;\n  const spacing = Math.max(200, insetWidth / links.length);\n  const baseX = inset + Math.min(0, (insetWidth - links.length * spacing) / 2);\n  const yShift = spacing < 300 ? 20 : 0;\n\n  const result: {[opName: string]: IPoint} = {};\n  links.forEach((link, idx) => {\n    const shiftDirection = 1 - (idx % 2) * 2; // 1 or -1, alternating\n    result[titleOfIO(link)] = {\n      x: baseX + idx * spacing,\n      y: y + yShift * shiftDirection,\n    };\n  });\n  return result;\n}\n\nexport function layoutOp(op: ILayoutOp, root: IPoint): OpLayout {\n  // Starting at the root (top left) X,Y, return the layout information for an op with\n  // input blocks, then the main block, then output blocks (arranged vertically).\n  //\n  // This code \"appends\" boxes vertically, advancing accY as it goes.\n  let accY = root.y;\n\n  const appendMiniIODots = <T extends ILayoutOp['inputs'][0] | ILayoutOp['outputs'][0]>(\n    ios: T[],\n    sortKey: (io: T) => string,\n    clusteringKey: (io: T) => string,\n  ) => {\n    // Sort both input and output boxes displayed on the graph alphabetically based on the input name.\n    // This means that if two ops are connected to each other multiple times, the lines do not cross.\n    const sorted = [...ios].sort((a, b) => sortKey(a).localeCompare(sortKey(b)));\n\n    let x = 0;\n    let last: OpLayoutIO;\n    let lastKey: string | null = null;\n    const layouts: {[name: string]: OpLayoutIO} = {};\n    const spacing = Math.min(IO_MINI_WIDTH, OP_WIDTH / (sorted.length + 1));\n\n    // Add \"port\" layouts, collapsing the dots if they are connected to the same opposing solid\n    // (eg: two inputs connected to the same upstream output) with a \"[O] + 2\" style.\n    sorted.forEach((io, _idx) => {\n      const key = clusteringKey(io);\n      if (key !== lastKey) {\n        lastKey = key;\n        last = {\n          port: {\n            x: root.x + x + PORT_INSET_X,\n            y: accY + PORT_INSET_Y,\n          },\n          collapsed: [],\n          label: false,\n          layout: {\n            x: root.x + x,\n            y: accY,\n            width: IO_MINI_WIDTH,\n            height: IO_HEIGHT,\n          },\n        };\n        layouts[io.definition.name] = last;\n        x += spacing;\n      } else {\n        if (last.collapsed.length === 0) {\n          x += 15;\n        }\n        last.collapsed.push(io.definition.name);\n      }\n    });\n\n    // Center the items on the op rather than left justifying them\n    const centeringAdjustment = (OP_WIDTH - (x - PORT_INSET_X + IO_MINI_WIDTH)) / 2;\n    Object.values(layouts).forEach((l) => {\n      l.layout.x += centeringAdjustment;\n      l.port.x += centeringAdjustment;\n    });\n\n    // Place the next box beneath the\n    accY += IO_HEIGHT;\n\n    return layouts;\n  };\n\n  const appendStackedIOBoxes = (ios: ILayoutOp['inputs'] | ILayoutOp['outputs']) => {\n    const layouts: {[name: string]: OpLayoutIO} = {};\n    ios.forEach((io) => {\n      layouts[io.definition.name] = {\n        port: {x: root.x + PORT_INSET_X, y: accY + PORT_INSET_Y},\n        label: true,\n        collapsed: [],\n        layout: {\n          x: root.x,\n          y: accY,\n          width: 0,\n          height: IO_HEIGHT,\n        },\n      };\n      accY += IO_HEIGHT;\n    });\n    return layouts;\n  };\n\n  const inputLayouts =\n    op.inputs.length > IO_THRESHOLD_FOR_MINI\n      ? appendMiniIODots(\n          op.inputs,\n          (input) => input.definition.name,\n          (input) => input.dependsOn[0]?.solid.name || '',\n        )\n      : appendStackedIOBoxes(op.inputs);\n\n  const opLayout: IBounds = {\n    x: root.x,\n    y: Math.max(root.y, accY - IO_INSET),\n    width: OP_WIDTH,\n    height: OP_BASE_HEIGHT + IO_INSET * 2,\n  };\n\n  accY += OP_BASE_HEIGHT;\n\n  if (op.definition.assetNodes.length && op.definition.description) {\n    opLayout.height += OP_ASSETS_ROW_HEIGHT;\n    accY += OP_ASSETS_ROW_HEIGHT;\n  }\n\n  const outputLayouts =\n    op.outputs.length > IO_THRESHOLD_FOR_MINI\n      ? appendMiniIODots(\n          op.outputs,\n          (o) => o.dependedBy[0]?.definition.name || '',\n          (o) => o.dependedBy[0]?.solid.name || '',\n        )\n      : appendStackedIOBoxes(op.outputs);\n\n  return {\n    bounds: {\n      x: root.x - 5,\n      y: root.y - 5,\n      width: OP_WIDTH + 10,\n      height: accY - root.y + 10,\n    },\n    op: opLayout,\n    inputs: inputLayouts,\n    outputs: outputLayouts,\n  };\n}\n","/* eslint-disable no-restricted-globals */\n\nimport {layoutAssetGraph} from '../asset-graph/layout';\nimport {layoutOpGraph} from '../graph/layout';\n\n/**\n * NOTE: Please avoid adding React as a transitive dependency to this file, as it can break\n * the development workflow. https://github.com/pmmmwh/react-refresh-webpack-plugin/issues/24\n *\n * If you see an error like `$RefreshReg$ is not defined` during development, check the\n * dependencies of this file. If you find that React has been included as a dependency, please\n * try to remove it.\n */\n\nself.addEventListener('message', (event) => {\n  const {data} = event;\n\n  switch (data.type) {\n    case 'layoutOpGraph': {\n      const {ops, opts} = data;\n      self.postMessage(layoutOpGraph(ops, opts));\n      break;\n    }\n    case 'layoutAssetGraph': {\n      const {graphData, opts} = data;\n      self.postMessage(layoutAssetGraph(graphData, opts));\n    }\n  }\n});\n"],"names":["MapCache","__webpack_require__","memoize","func","resolver","memoized","args","arguments","key","apply","cache","has","get","result","set","Cache","module","exports","_array_like_to_array","arr","len","length","i","arr2","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","_sliced_to_array","_array_with_holes","isArray","_iterable_to_array_limit","_s","_e","_i","Symbol","iterator","_arr","_n","_d","next","done","push","value","err","_non_iterable_rest","GROUP_NODE_PREFIX","layoutAssetGraph","graphData","opts","g","dagre","Graph","compound","ranker","tightTree","longestPath","setGraph","horizontalDAGs","rankdir","marginx","marginy","nodesep","edgesep","ranksep","setDefaultEdgeLabel","parentNodeIdForNode","node","definition","repository","location","groupName","join","shouldRender","renderedNodes","values","nodes","filter","groups","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","id","repositoryName","repositoryLocationName","repositoryDisambiguationRequired","bounds","x","y","width","height","return","showGroups","keys","forEach","groupId","setNode","getAssetNodeDimensions","setParent","linksToAssetsOutsideGraphedSet","entries","downstream","param","upstreamId","downstreamIds","graphDataDownstream","downstreamId","setEdge","v","w","weight","path","JSON","parse","label","getAssetLinkDimensions","maxWidth","maxHeight","dagreNode","startsWith","Math","max","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","groupForId","extendBounds","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","group","padBounds","top","bottom","groupBy","flat","edges","e","vXInset","wXInset","fromId","to","toId","min","a","padding","b","xmin","ymin","xmax","ymax","def","isSource","isObservable","isPartitioned","titleOfIO","solid","concat","flattenIO","arrays","map","array","item","layoutExternalConnections","links","layoutWidth","insetWidth","inset","spacing","baseX","yShift","link","idx","layoutOp","op","root","accY","appendMiniIODots","ios","sortKey","clusteringKey","last","sorted","_to_consumable_array","_array_without_holes","_iterable_to_array","iter","_non_iterable_spread","sort","localeCompare","lastKey","layouts","OP_WIDTH","io","_idx","port","IO_HEIGHT","collapsed","layout","centeringAdjustment","IO_MINI_WIDTH","l","appendStackedIOBoxes","inputLayouts","inputs","input","dependsOn","opLayout","OP_BASE_HEIGHT","assetNodes","description","outputLayouts","outputs","dependedBy","self","addEventListener","event","data","type","parentIOPadding","boundingBottom","opNamesPresent","ops","dagreNodes","postMessage","parentOp","PARENT_DEFINITION_PADDING","PARENT_INVOCATION_PADDING","pipelineOps","dep","point","opName","edgeName","find","conn","c","points","edge","parent","invocationBoundingBox","mappingLeftEdge","mappingLeftSpacing","d","output"],"sourceRoot":""}